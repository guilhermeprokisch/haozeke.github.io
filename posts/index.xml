<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Rohit Goswami</title>
        <link>https://rgoswami.me/posts/</link>
        <description>Recent content in Posts on Rohit Goswami</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 17 Feb 2020 15:28:00 +0000</lastBuildDate>
        <atom:link href="https://rgoswami.me/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>ISLR :: Classification</title>
            <link>https://rgoswami.me/posts/islr-ch4/</link>
            <pubDate>Mon, 17 Feb 2020 15:28:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/islr-ch4/</guid>
            <description>Chapter IV - Classification All the questions are as per the ISL seventh printing&amp;nbsp;1.
Common Stuff Here I&amp;rsquo;ll load things I will be using throughout, mostly libraries.
libsUsed&amp;lt;-c(&amp;#34;dplyr&amp;#34;,&amp;#34;ggplot2&amp;#34;,&amp;#34;tidyverse&amp;#34;,&amp;#34;ISLR&amp;#34;,&amp;#34;caret&amp;#34;) invisible(lapply(libsUsed, library, character.only = TRUE))# # Attaching package: &amp;#39;dplyr&amp;#39;# The following objects are masked from &amp;#39;package:stats&amp;#39;: # # filter, lag# The following objects are masked from &amp;#39;package:base&amp;#39;: # # intersect, setdiff, setequal, union# ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──# ✔ tibble 2.</description>
            <content type="html"><![CDATA[

<h2 id="chapter-iv---classification">Chapter IV - Classification</h2>

<p>All the questions are as per the
<a href="https://faculty.marshall.usc.edu/gareth-james/ISL/" target="_blank">ISL seventh
printing</a>&nbsp;<sup class="footnote-ref" id="fnref:fn-1"><a href="#fn:fn-1">1</a></sup>.</p>

<h3 id="common-stuff">Common Stuff</h3>

<p>Here I&rsquo;ll load things I will be using throughout, mostly libraries.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">libsUsed<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;dplyr&#34;</span>,<span style="color:#e6db74">&#34;ggplot2&#34;</span>,<span style="color:#e6db74">&#34;tidyverse&#34;</span>,<span style="color:#e6db74">&#34;ISLR&#34;</span>,<span style="color:#e6db74">&#34;caret&#34;</span>)
<span style="color:#a6e22e">invisible</span>(<span style="color:#a6e22e">lapply</span>(libsUsed, library, character.only <span style="color:#f92672">=</span> <span style="color:#66d9ef">TRUE</span>))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Attaching package: &#39;dplyr&#39;</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># The following objects are masked from &#39;package:stats&#39;:
#
#     filter, lag</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># The following objects are masked from &#39;package:base&#39;:
#
#     intersect, setdiff, setequal, union</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># ✔ tibble  2.1.3     ✔ purrr   0.3.3
# ✔ tidyr   1.0.0     ✔ stringr 1.4.0
# ✔ readr   1.3.1     ✔ forcats 0.4.0</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
# ✖ dplyr::filter() masks stats::filter()
# ✖ dplyr::lag()    masks stats::lag()</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Loading required package: lattice</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Attaching package: &#39;caret&#39;</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># The following object is masked from &#39;package:purrr&#39;:
#
#     lift</code></pre></div>
<h2 id="question-4.10---page-171">Question 4.10 - Page 171</h2>

<p>This question should be answered using the <code>Weekly</code> data set, which is
part of the ISLR package. This data is similar in nature to the Smarket
data from this chapter&rsquo;s lab, except that it contains 1, 089 weekly
returns for 21 years, from the beginning of 1990 to the end of 2010.</p>

<p><strong>(a)</strong> Produce some numerical and graphical summaries of the Weekly data.
Do there appear to be any patterns?</p>

<p><strong>(b)</strong> Use the full data set to perform a logistic regression with
<code>Direction</code> as the response and the five lag variables plus <code>Volume</code> as
predictors. Use the summary function to print the results. Do any of the
predictors appear to be statistically significant? If so, which ones?</p>

<p><strong>&copy;</strong> Compute the confusion matrix and overall fraction of correct
predictions. Explain what the confusion matrix is telling you about the
types of mistakes made by logistic regression.</p>

<p><strong>(d)</strong> Now fit the logistic regression model using a training data period
from 1990 to 2008, with <code>Lag2</code> as the only predictor. Compute the
confusion matrix and the overall fraction of correct predictions for the
held out data (that is, the data from 2009 and 2010).</p>

<p><strong>(e)</strong> Repeat <strong>(d)</strong> using LDA.</p>

<p><strong>(f)</strong> Repeat <strong>(d)</strong> using QDA.</p>

<p><strong>(g)</strong> Repeat <strong>(d)</strong> using KNN with \(K = 1\).</p>

<p><strong>(h)</strong> Which of these methods appears to provide the best results on this
data?</p>

<p><strong>(i)</strong> Experiment with different combinations of predictors, including
possible transformations and interactions, for each of the methods.
Report the variables, method, and associated confusion matrix that
appears to provide the best results on the held out data. Note that you
should also experiment with values for K in the KNN classifier.</p>

<h3 id="answer">Answer</h3>

<p>We will need the data in a variable for ease of use.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat<span style="color:#f92672">&lt;-</span>ISLR<span style="color:#f92672">::</span>Weekly</code></pre></div>
<h3 id="a-summary-statistics">a) Summary Statistics</h3>

<h4 id="text">Text</h4>

<p>Most of this segment relies heavily on usage of <code>dplyr</code> and especially
the <code>%&gt;%</code> or pipe operator for readability. The use of the <code>skimr</code>
package<sup class="footnote-ref" id="fnref:fn-2"><a href="#fn:fn-2">2</a></sup> might added more descriptive statistics, but is not
covered here.</p>

<h4 id="basic-summaries">Basic Summaries</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> str</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># &#39;data.frame&#39;: 1089 obs. of  9 variables:
#  $ Year     : num  1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 ...
#  $ Lag1     : num  0.816 -0.27 -2.576 3.514 0.712 ...
#  $ Lag2     : num  1.572 0.816 -0.27 -2.576 3.514 ...
#  $ Lag3     : num  -3.936 1.572 0.816 -0.27 -2.576 ...
#  $ Lag4     : num  -0.229 -3.936 1.572 0.816 -0.27 ...
#  $ Lag5     : num  -3.484 -0.229 -3.936 1.572 0.816 ...
#  $ Volume   : num  0.155 0.149 0.16 0.162 0.154 ...
#  $ Today    : num  -0.27 -2.576 3.514 0.712 1.178 ...
#  $ Direction: Factor w/ 2 levels &#34;Down&#34;,&#34;Up&#34;: 1 1 2 2 2 1 2 2 2 1 ...</code></pre></div>
<p>We see that there is only one <code>Factor</code>, which makes sense.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#       Year           Lag1               Lag2               Lag3
#  Min.   :1990   Min.   :-18.1950   Min.   :-18.1950   Min.   :-18.1950
#  1st Qu.:1995   1st Qu.: -1.1540   1st Qu.: -1.1540   1st Qu.: -1.1580
#  Median :2000   Median :  0.2410   Median :  0.2410   Median :  0.2410
#  Mean   :2000   Mean   :  0.1506   Mean   :  0.1511   Mean   :  0.1472
#  3rd Qu.:2005   3rd Qu.:  1.4050   3rd Qu.:  1.4090   3rd Qu.:  1.4090
#  Max.   :2010   Max.   : 12.0260   Max.   : 12.0260   Max.   : 12.0260
#       Lag4               Lag5              Volume            Today
#  Min.   :-18.1950   Min.   :-18.1950   Min.   :0.08747   Min.   :-18.1950
#  1st Qu.: -1.1580   1st Qu.: -1.1660   1st Qu.:0.33202   1st Qu.: -1.1540
#  Median :  0.2380   Median :  0.2340   Median :1.00268   Median :  0.2410
#  Mean   :  0.1458   Mean   :  0.1399   Mean   :1.57462   Mean   :  0.1499
#  3rd Qu.:  1.4090   3rd Qu.:  1.4050   3rd Qu.:2.05373   3rd Qu.:  1.4050
#  Max.   : 12.0260   Max.   : 12.0260   Max.   :9.32821   Max.   : 12.0260
#  Direction
#  Down:484
#  Up  :605
#
#
#
#</code></pre></div>
<h4 id="unique-values">Unique Values</h4>

<p>We might also want to know how many unique values are there in each
column.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(unique) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(length)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#      Year      Lag1      Lag2      Lag3      Lag4      Lag5    Volume     Today
#        21      1004      1005      1005      1005      1005      1089      1003
# Direction
#         2</code></pre></div>
<p>We note that year has disproportionately lower values, something to keep
in mind while constructing models later.</p>

<h4 id="range">Range</h4>

<p>The range of each variable might be useful as well, but we have to
ignore the factor.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">subset</span>(select<span style="color:#f92672">=-</span><span style="color:#a6e22e">c</span>(Direction)) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(range)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#      Year    Lag1    Lag2    Lag3    Lag4    Lag5   Volume   Today
# [1,] 1990 -18.195 -18.195 -18.195 -18.195 -18.195 0.087465 -18.195
# [2,] 2010  12.026  12.026  12.026  12.026  12.026 9.328214  12.026</code></pre></div>
<p>The most interesting thing about this is probably that the <code>Lag</code>
variables all have the same range, also something to be kept in mind
while applying transformations to the variable (if at all).</p>

<h4 id="mean-and-std.-dev">Mean and Std. Dev</h4>

<p>By now we might have a pretty good idea of how this will look, but it is
still worth seeing.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(mean)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#         Year         Lag1         Lag2         Lag3         Lag4         Lag5
# 2000.0486685    0.1505849    0.1510790    0.1472048    0.1458182    0.1398926
#       Volume        Today
#    1.5746176    0.1498990</code></pre></div>
<p>As expected, the <code>Lag</code> values have almost the same mean, what is a bit
interesting though, is that the <code>Today</code> variable has roughly the same
mean as the <code>Lag</code> variables.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(sd)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#     Year     Lag1     Lag2     Lag3     Lag4     Lag5   Volume    Today
# 6.033182 2.357013 2.357254 2.360502 2.360279 2.361285 1.686636 2.356927</code></pre></div>
<p>This is largely redundant in terms of new information.</p>

<h4 id="correlations">Correlations</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> cor</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#               Year         Lag1        Lag2        Lag3         Lag4
# Year    1.00000000 -0.032289274 -0.03339001 -0.03000649 -0.031127923
# Lag1   -0.03228927  1.000000000 -0.07485305  0.05863568 -0.071273876
# Lag2   -0.03339001 -0.074853051  1.00000000 -0.07572091  0.058381535
# Lag3   -0.03000649  0.058635682 -0.07572091  1.00000000 -0.075395865
# Lag4   -0.03112792 -0.071273876  0.05838153 -0.07539587  1.000000000
# Lag5   -0.03051910 -0.008183096 -0.07249948  0.06065717 -0.075675027
# Volume  0.84194162 -0.064951313 -0.08551314 -0.06928771 -0.061074617
# Today  -0.03245989 -0.075031842  0.05916672 -0.07124364 -0.007825873
#                Lag5      Volume        Today
# Year   -0.030519101  0.84194162 -0.032459894
# Lag1   -0.008183096 -0.06495131 -0.075031842
# Lag2   -0.072499482 -0.08551314  0.059166717
# Lag3    0.060657175 -0.06928771 -0.071243639
# Lag4   -0.075675027 -0.06107462 -0.007825873
# Lag5    1.000000000 -0.05851741  0.011012698
# Volume -0.058517414  1.00000000 -0.033077783
# Today   0.011012698 -0.03307778  1.000000000</code></pre></div>
<p>Useful though this is, it is kind of difficult to work with, in this
form, so we might as well programmatic-ally remove strongly correlated
data instead.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Uses caret</span>
corrCols<span style="color:#f92672">=</span>weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> cor <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">findCorrelation</span>(cutoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0.8</span>)
reducedDat<span style="color:#f92672">&lt;-</span>weeklyDat[<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(corrCols)]
reducedDat <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#       Year           Lag1               Lag2               Lag3
#  Min.   :1990   Min.   :-18.1950   Min.   :-18.1950   Min.   :-18.1950
#  1st Qu.:1995   1st Qu.: -1.1540   1st Qu.: -1.1540   1st Qu.: -1.1580
#  Median :2000   Median :  0.2410   Median :  0.2410   Median :  0.2410
#  Mean   :2000   Mean   :  0.1506   Mean   :  0.1511   Mean   :  0.1472
#  3rd Qu.:2005   3rd Qu.:  1.4050   3rd Qu.:  1.4090   3rd Qu.:  1.4090
#  Max.   :2010   Max.   : 12.0260   Max.   : 12.0260   Max.   : 12.0260
#       Lag4               Lag5              Today          Direction
#  Min.   :-18.1950   Min.   :-18.1950   Min.   :-18.1950   Down:484
#  1st Qu.: -1.1580   1st Qu.: -1.1660   1st Qu.: -1.1540   Up  :605
#  Median :  0.2380   Median :  0.2340   Median :  0.2410
#  Mean   :  0.1458   Mean   :  0.1399   Mean   :  0.1499
#  3rd Qu.:  1.4090   3rd Qu.:  1.4050   3rd Qu.:  1.4050
#  Max.   : 12.0260   Max.   : 12.0260   Max.   : 12.0260</code></pre></div>
<p>We can see that the <code>Volume</code> variable has been dropped, since it
evidently is strongly correlated with <code>Year</code>. This may or may not be a
useful insight, but it is good to keep in mind.</p>

<h4 id="visualization">Visualization</h4>

<p>We will be using the <code>ggplot2</code> library throughout for this segment.</p>

<p>Lets start with some scatter plots in a one v/s all scheme, similar to
the methodology
<a href="https://www.r-bloggers.com/plot-some-variables-against-many-others-with-tidyr-and-ggplot2/" target="_blank">described
here</a>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">gather</span>(<span style="color:#f92672">-</span>Year,key<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Variable&#34;</span>, value<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>Value,y<span style="color:#f92672">=</span>Year)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">facet_wrap</span>(<span style="color:#f92672">~</span>Variable) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">coord_flip</span>()</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-11-1.png"   />

        
            <figcaption class="center" >Figure 1: One v/s all for Direction</figcaption>
        
    </figure>



<p>That didn&rsquo;t really tell us much which we didn&rsquo;t already get from the
<code>cor()</code> function, but we can go the whole hog and do this for every
variable since we don&rsquo;t have that many in the first place..</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> pairs</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-12-1.png"   />

        
            <figcaption class="center" >Figure 2: Pairs</figcaption>
        
    </figure>



<p>This is not especially useful, and it is doubtful if more scatter-plots
will help at all, so lets move on to box plots.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(Direction,Volume,Today,Year),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Lag&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>Direction,y<span style="color:#f92672">=</span>Value,fill<span style="color:#f92672">=</span>Lag)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_boxplot</span>()</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-13-1.png"   />

        
            <figcaption class="center" >Figure 3: Box plots for Direction</figcaption>
        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(Direction,Volume,Today,Year),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Lag&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>Today,y<span style="color:#f92672">=</span>Value,fill<span style="color:#f92672">=</span>Lag)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_boxplot</span>()</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-14-1.png"   />

        
            <figcaption class="center" >Figure 4: More box plots</figcaption>
        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(Direction,Volume,Today,Year),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Lag&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>Lag,y<span style="color:#f92672">=</span>Value,fill<span style="color:#f92672">=</span>Direction)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_boxplot</span>()</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-15-1.png"   />

        
            <figcaption class="center" >Figure 5: Lag v/s all</figcaption>
        
    </figure>



<p>This does summarize our text analysis quite well. Importantly, it tells
us that the <code>Today</code> value is largely unrelated to the \(4\) <code>Lag</code>
variables.</p>

<p>A really good-looking box-plot is easy to get with the <code>caret</code> library:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">featurePlot</span>(
            y <span style="color:#f92672">=</span> weeklyDat<span style="color:#f92672">$</span>Direction,
            plot <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;box&#34;</span>,
            <span style="color:#75715e"># Pass in options to bwplot()</span>
            scales <span style="color:#f92672">=</span> <span style="color:#a6e22e">list</span>(y <span style="color:#f92672">=</span> <span style="color:#a6e22e">list</span>(relation<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;free&#34;</span>),
                          x <span style="color:#f92672">=</span> <span style="color:#a6e22e">list</span>(rot <span style="color:#f92672">=</span> <span style="color:#ae81ff">90</span>)),
            auto.key <span style="color:#f92672">=</span> <span style="color:#a6e22e">list</span>(columns <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-16-1.png"   />

        
            <figcaption class="center" >Figure 6: Plots with `caret`</figcaption>
        
    </figure>



<p>We might want to
<a href="http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization" target="_blank">visualize</a>
our correlation matrix as well.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">library</span>(reshape2)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Attaching package: &#39;reshape2&#39;</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># The following object is masked from &#39;package:tidyr&#39;:
#
#     smiths</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>Direction) <span style="color:#f92672">%&gt;%</span> cor <span style="color:#f92672">%&gt;%</span> melt <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>Var1,y<span style="color:#f92672">=</span>Var2,fill<span style="color:#f92672">=</span>value)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_tile</span>()</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-17-1.png"   />

        
            <figcaption class="center" >Figure 7: Heatmap of the correlation matrix</figcaption>
        
    </figure>



<h3 id="b-logistic-regression---predictor-significance">b) Logistic Regression - Predictor Significance</h3>

<p>Lets start with the native <code>glm</code> function.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glm.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">glm</span>(Direction<span style="color:#f92672">~</span>Lag1<span style="color:#f92672">+</span>Lag2<span style="color:#f92672">+</span>Lag3<span style="color:#f92672">+</span>Lag4<span style="color:#f92672">+</span>Lag5<span style="color:#f92672">+</span>Volume, data<span style="color:#f92672">=</span>weeklyDat, family<span style="color:#f92672">=</span>binomial)
<span style="color:#a6e22e">summary</span>(glm.fit)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Call:
# glm(formula = Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 +
#     Volume, family = binomial, data = weeklyDat)
#
# Deviance Residuals:
#     Min       1Q   Median       3Q      Max
# -1.6949  -1.2565   0.9913   1.0849   1.4579
#
# Coefficients:
#             Estimate Std. Error z value Pr(&gt;|z|)
# (Intercept)  0.26686    0.08593   3.106   0.0019 **
# Lag1        -0.04127    0.02641  -1.563   0.1181
# Lag2         0.05844    0.02686   2.175   0.0296 *
# Lag3        -0.01606    0.02666  -0.602   0.5469
# Lag4        -0.02779    0.02646  -1.050   0.2937
# Lag5        -0.01447    0.02638  -0.549   0.5833
# Volume      -0.02274    0.03690  -0.616   0.5377
# ---
# Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
#     Null deviance: 1496.2  on 1088  degrees of freedom
# Residual deviance: 1486.4  on 1082  degrees of freedom
# AIC: 1500.4
#
# Number of Fisher Scoring iterations: 4</code></pre></div>
<p>Evidently, only the <code>Lag2</code> value is of statistical significance.</p>

<p>It is always of importance to figure out what numeric values R will
assign to our factors, and it is best not to guess.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">contrasts</span>(weeklyDat<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#      Up
# Down  0
# Up    1</code></pre></div>
<h3 id="c-confusion-matrix-and-metrics">c) Confusion Matrix and Metrics</h3>

<p>Essentially:</p>

<ul>
<li>Predict the response</li>
<li>Create an output length vector</li>
<li>Apply thresholding to obtain labels</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glm.probs <span style="color:#f92672">=</span> <span style="color:#a6e22e">predict</span>(glm.fit, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;response&#34;</span>)
glm.pred <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#e6db74">&#34;Up&#34;</span>,<span style="color:#a6e22e">length</span>(glm.probs))
glm.pred[glm.probs<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0.5</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Down&#34;</span>
glm.pred<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(glm.pred)
<span style="color:#a6e22e">confusionMatrix</span>(glm.pred,weeklyDat<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down  Up
#       Down   54  48
#       Up    430 557
#
#                Accuracy : 0.5611
#                  95% CI : (0.531, 0.5908)
#     No Information Rate : 0.5556
#     P-Value [Acc &gt; NIR] : 0.369
#
#                   Kappa : 0.035
#
#  Mcnemar&#39;s Test P-Value : &lt;2e-16
#
#             Sensitivity : 0.11157
#             Specificity : 0.92066
#          Pos Pred Value : 0.52941
#          Neg Pred Value : 0.56434
#              Prevalence : 0.44444
#          Detection Rate : 0.04959
#    Detection Prevalence : 0.09366
#       Balanced Accuracy : 0.51612
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<ul>
<li>We have used the <code>confusionMatrix</code> function from <code>caret</code>
(<a href="https://rdrr.io/cran/caret/man/confusionMatrix.html" target="_blank">documented
here</a>) instead of displaying the results with <code>table</code> and then
calculating precision, recall and the rest by hand.</li>
</ul>

<h3 id="d-train-test-splits">d) Train Test Splits</h3>

<p>Although we could have used the indices and passed it to <code>glm</code> as the
<code>subset</code> attribute, it is cleaner to just make subsets instead.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">weeklyVal<span style="color:#f92672">&lt;-</span>weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">filter</span>(Year<span style="color:#f92672">&gt;=</span><span style="color:#ae81ff">2009</span>)
weeklyTrain<span style="color:#f92672">&lt;-</span>weeklyDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">filter</span>(Year<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">2009</span>)</code></pre></div>
<p>Now we can train a model on our training data.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glm.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">glm</span>(Direction<span style="color:#f92672">~</span>Lag2,data<span style="color:#f92672">=</span>weeklyTrain,family<span style="color:#f92672">=</span>binomial)
<span style="color:#a6e22e">summary</span>(glm.fit)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Call:
# glm(formula = Direction ~ Lag2, family = binomial, data = weeklyTrain)
#
# Deviance Residuals:
#    Min      1Q  Median      3Q     Max
# -1.536  -1.264   1.021   1.091   1.368
#
# Coefficients:
#             Estimate Std. Error z value Pr(&gt;|z|)
# (Intercept)  0.20326    0.06428   3.162  0.00157 **
# Lag2         0.05810    0.02870   2.024  0.04298 *
# ---
# Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
#     Null deviance: 1354.7  on 984  degrees of freedom
# Residual deviance: 1350.5  on 983  degrees of freedom
# AIC: 1354.5
#
# Number of Fisher Scoring iterations: 4</code></pre></div>
<p>Having fit our model, we will test the predictions on our held out data.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glm.probs <span style="color:#f92672">=</span> <span style="color:#a6e22e">predict</span>(glm.fit,weeklyVal, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;response&#34;</span>)
glm.pred <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#e6db74">&#34;Up&#34;</span>,<span style="color:#a6e22e">length</span>(glm.probs))
glm.pred[glm.probs<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0.5</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Down&#34;</span>
glm.pred<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(glm.pred)
<span style="color:#a6e22e">confusionMatrix</span>(glm.pred,weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down    9  5
#       Up     34 56
#
#                Accuracy : 0.625
#                  95% CI : (0.5247, 0.718)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.2439
#
#                   Kappa : 0.1414
#
#  Mcnemar&#39;s Test P-Value : 7.34e-06
#
#             Sensitivity : 0.20930
#             Specificity : 0.91803
#          Pos Pred Value : 0.64286
#          Neg Pred Value : 0.62222
#              Prevalence : 0.41346
#          Detection Rate : 0.08654
#    Detection Prevalence : 0.13462
#       Balanced Accuracy : 0.56367
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<p>We really aren&rsquo;t doing very well with this single variable model as is
evident.</p>

<h3 id="e-lda-models">e) LDA models</h3>

<p>At this stage we could use <code>MASS</code> to get the <code>lda</code> function, but it
would be better to just switch to using <code>caret</code>. Note that the <code>caret</code>
prediction is a label by default, so thresholding needs to be specified
differently if required.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">lda.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(Direction<span style="color:#f92672">~</span>Lag2,data<span style="color:#f92672">=</span>weeklyTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;lda&#34;</span>)
<span style="color:#a6e22e">summary</span>(lda.fit)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#             Length Class      Mode
# prior       2      -none-     numeric
# counts      2      -none-     numeric
# means       2      -none-     numeric
# scaling     1      -none-     numeric
# lev         2      -none-     character
# svd         1      -none-     numeric
# N           1      -none-     numeric
# call        3      -none-     call
# xNames      1      -none-     character
# problemType 1      -none-     character
# tuneValue   1      data.frame list
# obsLevels   2      -none-     character
# param       0      -none-     list</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">predict</span>(lda.fit,weeklyVal) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">confusionMatrix</span>(weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down    9  5
#       Up     34 56
#
#                Accuracy : 0.625
#                  95% CI : (0.5247, 0.718)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.2439
#
#                   Kappa : 0.1414
#
#  Mcnemar&#39;s Test P-Value : 7.34e-06
#
#             Sensitivity : 0.20930
#             Specificity : 0.91803
#          Pos Pred Value : 0.64286
#          Neg Pred Value : 0.62222
#              Prevalence : 0.41346
#          Detection Rate : 0.08654
#    Detection Prevalence : 0.13462
#       Balanced Accuracy : 0.56367
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<h3 id="f-qda-models">f) QDA models</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">qda.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(Direction<span style="color:#f92672">~</span>Lag2,data<span style="color:#f92672">=</span>weeklyTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;qda&#34;</span>)
<span style="color:#a6e22e">summary</span>(qda.fit)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#             Length Class      Mode
# prior       2      -none-     numeric
# counts      2      -none-     numeric
# means       2      -none-     numeric
# scaling     2      -none-     numeric
# ldet        2      -none-     numeric
# lev         2      -none-     character
# N           1      -none-     numeric
# call        3      -none-     call
# xNames      1      -none-     character
# problemType 1      -none-     character
# tuneValue   1      data.frame list
# obsLevels   2      -none-     character
# param       0      -none-     list</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">predict</span>(qda.fit,weeklyVal) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">confusionMatrix</span>(weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down    0  0
#       Up     43 61
#
#                Accuracy : 0.5865
#                  95% CI : (0.4858, 0.6823)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.5419
#
#                   Kappa : 0
#
#  Mcnemar&#39;s Test P-Value : 1.504e-10
#
#             Sensitivity : 0.0000
#             Specificity : 1.0000
#          Pos Pred Value :    NaN
#          Neg Pred Value : 0.5865
#              Prevalence : 0.4135
#          Detection Rate : 0.0000
#    Detection Prevalence : 0.0000
#       Balanced Accuracy : 0.5000
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<p>This is quite possibly the worst of the lot. As is evident, the model
just predicts <code>Up</code> no matter what.</p>

<h3 id="g-knn">g) KNN</h3>

<p><code>caret</code> tends to over-zealously retrain models and find the best
possible parameters. In this case that is annoying and redundant so we
will use the <code>class</code> library. We <strong>should really scale our data</strong> before
using KNN though.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">library</span>(class)
<span style="color:#a6e22e">set.seed</span>(<span style="color:#ae81ff">1</span>)
knn.pred<span style="color:#f92672">=</span><span style="color:#a6e22e">knn</span>(<span style="color:#a6e22e">as.matrix</span>(weeklyTrain<span style="color:#f92672">$</span>Lag2),<span style="color:#a6e22e">as.matrix</span>(weeklyVal<span style="color:#f92672">$</span>Lag2),weeklyTrain<span style="color:#f92672">$</span>Direction,k<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
<span style="color:#a6e22e">confusionMatrix</span>(knn.pred,weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down   21 30
#       Up     22 31
#
#                Accuracy : 0.5
#                  95% CI : (0.4003, 0.5997)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.9700
#
#                   Kappa : -0.0033
#
#  Mcnemar&#39;s Test P-Value : 0.3317
#
#             Sensitivity : 0.4884
#             Specificity : 0.5082
#          Pos Pred Value : 0.4118
#          Neg Pred Value : 0.5849
#              Prevalence : 0.4135
#          Detection Rate : 0.2019
#    Detection Prevalence : 0.4904
#       Balanced Accuracy : 0.4983
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<p>Clearly this model is not doing very well.</p>

<h3 id="h-model-selection">h) Model Selection</h3>

<p>We will first get the ROC curves.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">library</span>(pROC)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Type &#39;citation(&#34;pROC&#34;)&#39; for a citation.</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Attaching package: &#39;pROC&#39;</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># The following objects are masked from &#39;package:stats&#39;:
#
#     cov, smooth, var</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">knnROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(knn.pred),response<span style="color:#f92672">=</span>weeklyVal<span style="color:#f92672">$</span>Direction,levels<span style="color:#f92672">=</span><span style="color:#a6e22e">rev</span>(<span style="color:#a6e22e">levels</span>(weeklyVal<span style="color:#f92672">$</span>Direction)))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">logiROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(<span style="color:#a6e22e">predict</span>(glm.fit,weeklyVal)),response<span style="color:#f92672">=</span>weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = Down, case = Up</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting direction: controls &gt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">ldaROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(<span style="color:#a6e22e">predict</span>(lda.fit,weeklyVal)),response<span style="color:#f92672">=</span>weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = Down, case = Up</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">qdaROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(<span style="color:#a6e22e">predict</span>(qda.fit,weeklyVal)),response<span style="color:#f92672">=</span>weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = Down, case = Up
# Setting direction: controls &lt; cases</code></pre></div>
<p>Now to plot them.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">ggroc</span>(<span style="color:#a6e22e">list</span>(KNN<span style="color:#f92672">=</span>knnROC,Logistic<span style="color:#f92672">=</span>logiROC,LDA<span style="color:#f92672">=</span>ldaROC,QDA<span style="color:#f92672">=</span>qdaROC))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-28-1.png"   />

        
            <figcaption class="center" >Figure 8: ROC curves for Weekly data</figcaption>
        
    </figure>



<p>To compare models with <code>caret</code> it is easy to refit the logistic and knn
models in the caret formulation.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">knnCaret<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(Direction<span style="color:#f92672">~</span>Lag2,data<span style="color:#f92672">=</span>weeklyTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;knn&#34;</span>)</code></pre></div>
<p>However, the KNN model is the best parameter model.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">resmod <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">resamples</span>(<span style="color:#a6e22e">list</span>(lda<span style="color:#f92672">=</span>lda.fit, qda<span style="color:#f92672">=</span>qda.fit, KNN<span style="color:#f92672">=</span>knnCaret))
<span style="color:#a6e22e">summary</span>(resmod)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
# Call:
# summary.resamples(object = resmod)
#
# Models: lda, qda, KNN
# Number of resamples: 25
#
# Accuracy
#          Min.   1st Qu.    Median      Mean   3rd Qu.      Max. NA&#39;s
# lda 0.5043228 0.5344353 0.5529101 0.5500861 0.5683060 0.5846995    0
# qda 0.5044248 0.5204360 0.5307263 0.5326785 0.5462428 0.5777778    0
# KNN 0.4472222 0.5082873 0.5240642 0.5168327 0.5302198 0.5485714    0
#
# Kappa
#            Min.      1st Qu.      Median         Mean    3rd Qu.       Max.
# lda -0.02618939 -0.003638168 0.005796908  0.007801904 0.01635328 0.05431238
# qda -0.06383592 -0.005606123 0.000000000 -0.003229697 0.00000000 0.03606344
# KNN -0.11297539  0.004168597 0.024774647  0.016171229 0.04456142 0.07724439
#     NA&#39;s
# lda    0
# qda    0
# KNN    0</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">bwplot</span>(resmod)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-30-1.png"   />

        
            <figcaption class="center" >Figure 9: Caret plots for comparison</figcaption>
        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">dotplot</span>(results)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Error in dotplot(results): object &#39;results&#39; not found</code></pre></div>
<p>Kappa or Cohen&rsquo;s Kappa is essentially classification accuracy,
normalized at the baseline of random chance. It is a more useful measure
to use on problems that have imbalanced classes. There&rsquo;s more on model
selection
<a href="https://machinelearningmastery.com/machine-learning-evaluation-metrics-in-r/" target="_blank">here</a>.</p>

<h3 id="i-further-tuning">i) Further Tuning</h3>

<p>Do note the <code>caret</code>
<a href="https://topepo.github.io/caret/model-training-and-tuning.html" target="_blank">defaults</a>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">fitControl <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">trainControl</span>(<span style="color:#75715e"># 10-fold CV</span>
                           method <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;repeatedcv&#34;</span>,
                           number <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>,
                           <span style="color:#75715e"># repeated ten times</span>
                           repeats <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>)</code></pre></div>
<h3 id="logistic">Logistic</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glm2.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">glm</span>(Direction<span style="color:#f92672">~</span>Lag1<span style="color:#f92672">+</span>Lag2<span style="color:#f92672">+</span>Lag3<span style="color:#f92672">+</span>Lag4<span style="color:#f92672">+</span>Lag5<span style="color:#f92672">+</span>Volume, data<span style="color:#f92672">=</span>weeklyDat, family<span style="color:#f92672">=</span>binomial)

glm2.probs <span style="color:#f92672">=</span> <span style="color:#a6e22e">predict</span>(glm2.fit,weeklyVal, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;response&#34;</span>)
glm2.pred <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#e6db74">&#34;Up&#34;</span>,<span style="color:#a6e22e">length</span>(glm2.probs))
glm2.pred[glm2.probs<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0.5</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Down&#34;</span>
glm2.pred<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(glm2.pred)
<span style="color:#a6e22e">confusionMatrix</span>(glm2.pred,weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down   17 13
#       Up     26 48
#
#                Accuracy : 0.625
#                  95% CI : (0.5247, 0.718)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.24395
#
#                   Kappa : 0.1907
#
#  Mcnemar&#39;s Test P-Value : 0.05466
#
#             Sensitivity : 0.3953
#             Specificity : 0.7869
#          Pos Pred Value : 0.5667
#          Neg Pred Value : 0.6486
#              Prevalence : 0.4135
#          Detection Rate : 0.1635
#    Detection Prevalence : 0.2885
#       Balanced Accuracy : 0.5911
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<h4 id="qda">QDA</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">qdaCaret<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(Direction<span style="color:#f92672">~</span>Lag2<span style="color:#f92672">+</span>Lag4,data<span style="color:#f92672">=</span>weeklyTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;qda&#34;</span>,trainControl<span style="color:#f92672">=</span>fitControl)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(qdaCaret)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#             Length Class      Mode
# prior       2      -none-     numeric
# counts      2      -none-     numeric
# means       4      -none-     numeric
# scaling     8      -none-     numeric
# ldet        2      -none-     numeric
# lev         2      -none-     character
# N           1      -none-     numeric
# call        4      -none-     call
# xNames      2      -none-     character
# problemType 1      -none-     character
# tuneValue   1      data.frame list
# obsLevels   2      -none-     character
# param       1      -none-     list</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">predict</span>(qdaCaret,weeklyVal) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">confusionMatrix</span>(weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down    9 14
#       Up     34 47
#
#                Accuracy : 0.5385
#                  95% CI : (0.438, 0.6367)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.863079
#
#                   Kappa : -0.0217
#
#  Mcnemar&#39;s Test P-Value : 0.006099
#
#             Sensitivity : 0.20930
#             Specificity : 0.77049
#          Pos Pred Value : 0.39130
#          Neg Pred Value : 0.58025
#              Prevalence : 0.41346
#          Detection Rate : 0.08654
#    Detection Prevalence : 0.22115
#       Balanced Accuracy : 0.48990
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<h4 id="lda">LDA</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">ldaCaret<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(Direction<span style="color:#f92672">~</span>Lag2<span style="color:#f92672">+</span>Lag1<span style="color:#f92672">+</span>Year,data<span style="color:#f92672">=</span>weeklyTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;lda&#34;</span>,trainControl<span style="color:#f92672">=</span>fitControl)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(ldaCaret)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#             Length Class      Mode
# prior       2      -none-     numeric
# counts      2      -none-     numeric
# means       6      -none-     numeric
# scaling     3      -none-     numeric
# lev         2      -none-     character
# svd         1      -none-     numeric
# N           1      -none-     numeric
# call        4      -none-     call
# xNames      3      -none-     character
# problemType 1      -none-     character
# tuneValue   1      data.frame list
# obsLevels   2      -none-     character
# param       1      -none-     list</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">predict</span>(ldaCaret,weeklyVal) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">confusionMatrix</span>(weeklyVal<span style="color:#f92672">$</span>Direction)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction Down Up
#       Down   20 19
#       Up     23 42
#
#                Accuracy : 0.5962
#                  95% CI : (0.4954, 0.6913)
#     No Information Rate : 0.5865
#     P-Value [Acc &gt; NIR] : 0.4626
#
#                   Kappa : 0.1558
#
#  Mcnemar&#39;s Test P-Value : 0.6434
#
#             Sensitivity : 0.4651
#             Specificity : 0.6885
#          Pos Pred Value : 0.5128
#          Neg Pred Value : 0.6462
#              Prevalence : 0.4135
#          Detection Rate : 0.1923
#    Detection Prevalence : 0.3750
#       Balanced Accuracy : 0.5768
#
#        &#39;Positive&#39; Class : Down
#</code></pre></div>
<h4 id="knn">KNN</h4>

<p>Honestly, again, this should be scaled. Plot <code>KNN</code> with the best
parameters.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(knnCaret)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-37-1.png"   />

        
            <figcaption class="center" >Figure 10: KNN statistics</figcaption>
        
    </figure>



<p>Evidently, the accuracy increases with an increase in the number of
neighbors considered.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(knnCaret, print.thres <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.5</span>, type<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;S&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-38-1.png"   />

        
            <figcaption class="center" >Figure 11: Visualizing thresholds for KNN</figcaption>
        
    </figure>



<p>However this shows that we don&rsquo;t actually get much of an increase in
accuracy anyway.</p>

<h2 id="question-4.11---pages-171-172">Question 4.11 - Pages 171-172</h2>

<p>In this problem, you will develop a model to predict whether a given car
gets high or low gas mileage based on the Auto data set.</p>

<p><strong>(a)</strong> Create a binary variable, <code>mpg01</code> , that contains a 1 if <code>mpg</code>
contains a value above its median, and a 0 if mpg contains a value below
its median. You can compute the median using the <code>median()</code> function.
Note you may find it helpful to use the <code>data.frame()</code> function to
create a single data set containing both <code>mpg01</code> and the other <code>Auto</code>
variables.</p>

<p><strong>(b)</strong> Explore the data graphically in order to investigate the
association between <code>mpg01</code> and the other features. Which of the other
features seem most likely to be useful in predicting <code>mpg01</code> ?
Scatter-plots and boxplots may be useful tools to answer this question.
Describe your findings.</p>

<p><strong>&copy;</strong> Split the data into a training set and a test set.</p>

<p><strong>(d)</strong> Perform LDA on the training data in order to predict <code>mpg01</code> using
the variables that seemed most associated with <code>mpg01</code> in <strong>(b)</strong>. What is
the test error of the model obtained?</p>

<p><strong>(e)</strong> Perform QDA on the training data in order to predict <code>mpg01</code> using
the variables that seemed most associated with <code>mpg01</code> in <strong>(b)</strong>. What is
the test error of the model obtained?</p>

<p><strong>(f)</strong> Perform logistic regression on the training data in order to
predict <code>mpg01</code> using the variables that seemed most associated with
<code>mpg01</code> in <strong>(b)</strong>. What is the test error of the model obtained?</p>

<p><strong>(g)</strong> Perform KNN on the training data, with several values of \(K\), in
order to predict <code>mpg01</code> . Use only the variables that seemed most
associated with <code>mpg01</code> in <strong>(b)</strong>. What test errors do you obtain? Which
value of \(K\) seems to perform the best on this data set?</p>

<h3 id="answer-1">Answer</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoDat<span style="color:#f92672">&lt;-</span>ISLR<span style="color:#f92672">::</span>Auto</code></pre></div>
<h3 id="a-binary-variable">a) Binary Variable</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoDat<span style="color:#f92672">$</span>mpg <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sort</span>() <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">median</span>()</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 22.75</code></pre></div>
<p>Now we can get a new variable from that.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">newDat<span style="color:#f92672">=</span>autoDat
newDat<span style="color:#f92672">$</span>mpg01 <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ifelse</span>(autoDat<span style="color:#f92672">$</span>mpg<span style="color:#f92672">&lt;</span>autoDat<span style="color:#f92672">$</span>mpg <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sort</span>() <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">median</span>(),<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">factor</span>()</code></pre></div>
<p>Note that the <code>ifelse</code> command takes a truthy function, value when
false, value when true, but does not return a factor automatically so we
piped it to factor to ensure it is factorial.</p>

<h3 id="b-visual-exploration">b) Visual Exploration</h3>

<p>Some box-plots:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">newDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(mpg01,name),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Params&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>mpg01,y<span style="color:#f92672">=</span>Value)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_boxplot</span>() <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">facet_wrap</span>(<span style="color:#f92672">~</span> Params, scales <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;free_y&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-42-1.png"   />

        
            <figcaption class="center" >Figure 12: Box plots</figcaption>
        
    </figure>



<p>With some scatter plots as well:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">newDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(mpg01,name,weight),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Params&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>weight,y<span style="color:#f92672">=</span>Value,color<span style="color:#f92672">=</span>mpg01)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">facet_wrap</span>(<span style="color:#f92672">~</span> Params, scales <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;free_y&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-43-1.png"   />

        
            <figcaption class="center" >Figure 13: Scatter plots</figcaption>
        
    </figure>



<p>Clearly, <code>origin</code>, <code>year</code> and <code>cylinder</code> are essentially not very
relevant numerically for the regression lines and confidence intervals.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">newDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>year,<span style="color:#f92672">-</span>origin,<span style="color:#f92672">-</span>cylinders) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(mpg01,name,mpg),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Params&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>mpg,y<span style="color:#f92672">=</span>Value,color<span style="color:#f92672">=</span>mpg01)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_smooth</span>(method<span style="color:#f92672">=</span>lm) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">facet_wrap</span>(<span style="color:#f92672">~</span> Params, scales <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;free_y&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-44-1.png"   />

        
    </figure>



<h3 id="c-train-test-split">c) Train-Test Split</h3>

<p>We can split our data
<a href="https://topepo.github.io/caret/data-splitting.html#simple-splitting-based-on-the-outcome" target="_blank">very
easily</a> with <code>caret</code>. It is important to remember that for factors,
random sampling occurs within each class to preserve the overall class
distribution of the data.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">set.seed</span>(<span style="color:#ae81ff">1984</span>)
trainInd <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">createDataPartition</span>(newDat<span style="color:#f92672">$</span>mpg01, <span style="color:#75715e"># Factor, so class sampling</span>
                                p<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>, <span style="color:#75715e"># 70-30 train-test</span>
                                list<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>, <span style="color:#75715e"># No lists</span>
                                times<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>) <span style="color:#75715e"># No bootstrap</span>
autoTrain<span style="color:#f92672">&lt;-</span>newDat[trainInd,]
autoTest<span style="color:#f92672">&lt;-</span>newDat[<span style="color:#f92672">-</span>trainInd,]</code></pre></div>
<h3 id="d-lda-with-significant-variables">d) LDA with Significant Variables</h3>

<p>Whenever I see significant I think correlation, so let&rsquo;s take a look at
that.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">newDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>mpg01,<span style="color:#f92672">-</span>name) <span style="color:#f92672">%&gt;%</span> cor</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#                     mpg  cylinders displacement horsepower     weight
# mpg           1.0000000 -0.7776175   -0.8051269 -0.7784268 -0.8322442
# cylinders    -0.7776175  1.0000000    0.9508233  0.8429834  0.8975273
# displacement -0.8051269  0.9508233    1.0000000  0.8972570  0.9329944
# horsepower   -0.7784268  0.8429834    0.8972570  1.0000000  0.8645377
# weight       -0.8322442  0.8975273    0.9329944  0.8645377  1.0000000
# acceleration  0.4233285 -0.5046834   -0.5438005 -0.6891955 -0.4168392
# year          0.5805410 -0.3456474   -0.3698552 -0.4163615 -0.3091199
# origin        0.5652088 -0.5689316   -0.6145351 -0.4551715 -0.5850054
#              acceleration       year     origin
# mpg             0.4233285  0.5805410  0.5652088
# cylinders      -0.5046834 -0.3456474 -0.5689316
# displacement   -0.5438005 -0.3698552 -0.6145351
# horsepower     -0.6891955 -0.4163615 -0.4551715
# weight         -0.4168392 -0.3091199 -0.5850054
# acceleration    1.0000000  0.2903161  0.2127458
# year            0.2903161  1.0000000  0.1815277
# origin          0.2127458  0.1815277  1.0000000</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">newDat <span style="color:#f92672">%&gt;%</span> length</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 10</code></pre></div>
<p>Now lets quickly see what it looks like with correlated values removed.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">corrCols2<span style="color:#f92672">=</span>newDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>mpg01,<span style="color:#f92672">-</span>name) <span style="color:#f92672">%&gt;%</span> cor <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">findCorrelation</span>(cutoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0.85</span>)
newRed<span style="color:#f92672">&lt;-</span>newDat[<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(corrCols2)]
newRed <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#       mpg            weight      acceleration        year           origin
#  Min.   : 9.00   Min.   :1613   Min.   : 8.00   Min.   :70.00   Min.   :1.000
#  1st Qu.:17.00   1st Qu.:2225   1st Qu.:13.78   1st Qu.:73.00   1st Qu.:1.000
#  Median :22.75   Median :2804   Median :15.50   Median :76.00   Median :1.000
#  Mean   :23.45   Mean   :2978   Mean   :15.54   Mean   :75.98   Mean   :1.577
#  3rd Qu.:29.00   3rd Qu.:3615   3rd Qu.:17.02   3rd Qu.:79.00   3rd Qu.:2.000
#  Max.   :46.60   Max.   :5140   Max.   :24.80   Max.   :82.00   Max.   :3.000
#
#                  name     mpg01
#  amc matador       :  5   0:196
#  ford pinto        :  5   1:196
#  toyota corolla    :  5
#  amc gremlin       :  4
#  amc hornet        :  4
#  chevrolet chevette:  4
#  (Other)           :365</code></pre></div>
<p>Inherent in this discussion is the fact that I consider what is
correlated to <code>mpg</code> to be a good indicator of what will help <code>mpg01</code> for
obvious reasons.</p>

<p>Now we can just use the columns we found with <code>findCorrelation</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">corrCols2 <span style="color:#f92672">%&gt;%</span> print</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 3 4 2</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">names</span>(newDat)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#  [1] &#34;mpg&#34;          &#34;cylinders&#34;    &#34;displacement&#34; &#34;horsepower&#34;   &#34;weight&#34;
#  [6] &#34;acceleration&#34; &#34;year&#34;         &#34;origin&#34;       &#34;name&#34;         &#34;mpg01&#34;</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoLDA<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(mpg01<span style="color:#f92672">~</span>cylinders<span style="color:#f92672">+</span>displacement<span style="color:#f92672">+</span>horsepower,data<span style="color:#f92672">=</span>autoTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;lda&#34;</span>)
valScoreLDA<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(autoLDA,autoTest)</code></pre></div>
<p>Now we can check the statistics.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confusionMatrix</span>(valScoreLDA,autoTest<span style="color:#f92672">$</span>mpg01)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 56  2
#          1  2 56
#
#                Accuracy : 0.9655
#                  95% CI : (0.9141, 0.9905)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.931
#
#  Mcnemar&#39;s Test P-Value : 1
#
#             Sensitivity : 0.9655
#             Specificity : 0.9655
#          Pos Pred Value : 0.9655
#          Neg Pred Value : 0.9655
#              Prevalence : 0.5000
#          Detection Rate : 0.4828
#    Detection Prevalence : 0.5000
#       Balanced Accuracy : 0.9655
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div>
<p>That is an amazingly accurate model.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">auto_ldaROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(valScoreLDA),response<span style="color:#f92672">=</span>autoTest<span style="color:#f92672">$</span>mpg01,levels<span style="color:#f92672">=</span><span style="color:#a6e22e">levels</span>(autoTest<span style="color:#f92672">$</span>mpg01))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">ggroc</span>(auto_ldaROC)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-51-1.png"   />

        
    </figure>



<h3 id="e-qda-with-significant-variables">e) QDA with Significant Variables</h3>

<p>Same deal as before.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoQDA<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(mpg01<span style="color:#f92672">~</span>cylinders<span style="color:#f92672">+</span>displacement<span style="color:#f92672">+</span>horsepower,data<span style="color:#f92672">=</span>autoTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;qda&#34;</span>)
valScoreQDA<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(autoQDA,autoTest)</code></pre></div>
<p>Now we can check the statistics.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confusionMatrix</span>(valScoreQDA,autoTest<span style="color:#f92672">$</span>mpg01)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 56  2
#          1  2 56
#
#                Accuracy : 0.9655
#                  95% CI : (0.9141, 0.9905)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.931
#
#  Mcnemar&#39;s Test P-Value : 1
#
#             Sensitivity : 0.9655
#             Specificity : 0.9655
#          Pos Pred Value : 0.9655
#          Neg Pred Value : 0.9655
#              Prevalence : 0.5000
#          Detection Rate : 0.4828
#    Detection Prevalence : 0.5000
#       Balanced Accuracy : 0.9655
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">auto_qdaROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(valScoreQDA),response<span style="color:#f92672">=</span>autoTest<span style="color:#f92672">$</span>mpg01,levels<span style="color:#f92672">=</span><span style="color:#a6e22e">levels</span>(autoTest<span style="color:#f92672">$</span>mpg01))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">ggroc</span>(auto_qdaROC)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-54-1.png"   />

        
    </figure>



<p>OK, this is weird enough to check if it isn&rsquo;t some sort of artifact.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoQDA2<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(mpg01<span style="color:#f92672">~</span>horsepower, data<span style="color:#f92672">=</span>autoTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;qda&#39;</span>)
valScoreQDA2<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(autoQDA2, autoTest)
<span style="color:#a6e22e">confusionMatrix</span>(valScoreQDA2,autoTest<span style="color:#f92672">$</span>mpg01)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 42  3
#          1 16 55
#
#                Accuracy : 0.8362
#                  95% CI : (0.7561, 0.8984)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : 4.315e-14
#
#                   Kappa : 0.6724
#
#  Mcnemar&#39;s Test P-Value : 0.005905
#
#             Sensitivity : 0.7241
#             Specificity : 0.9483
#          Pos Pred Value : 0.9333
#          Neg Pred Value : 0.7746
#              Prevalence : 0.5000
#          Detection Rate : 0.3621
#    Detection Prevalence : 0.3879
#       Balanced Accuracy : 0.8362
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div>
<p>OK, so the model isn&rsquo;t completely creepily correct all the time. In this
case we should probably think about what is going on. I would think it
is because of the nature of the <code>train-test</code> split we performed. We have
ensured during the sampling of our data that the train and test sets
contain the SAME distribution (assumed). So that&rsquo;s why our training
result and test results are both incredibly good. They&rsquo;re essentially
the same thing.</p>

<p>In fact, this is the perfect time to consider a validation set, just to
see what the models are really doing. Won&rsquo;t get into it right now
though.</p>

<h3 id="f-logistic-with-significant-variables">f) Logistic with Significant Variables</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glmAuto.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">glm</span>(mpg01<span style="color:#f92672">~</span>cylinders<span style="color:#f92672">+</span>displacement<span style="color:#f92672">+</span>horsepower, data<span style="color:#f92672">=</span>autoTrain, family<span style="color:#f92672">=</span>binomial)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glmAuto.probs <span style="color:#f92672">=</span> <span style="color:#a6e22e">predict</span>(glmAuto.fit,autoTest, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;response&#34;</span>)
glmAuto.pred <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">length</span>(glmAuto.probs))
glmAuto.pred[glmAuto.probs<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0.5</span>]<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>
glmAuto.pred<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(glmAuto.pred)
<span style="color:#a6e22e">confusionMatrix</span>(glmAuto.pred,autoTest<span style="color:#f92672">$</span>mpg01)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 56  4
#          1  2 54
#
#                Accuracy : 0.9483
#                  95% CI : (0.8908, 0.9808)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.8966
#
#  Mcnemar&#39;s Test P-Value : 0.6831
#
#             Sensitivity : 0.9655
#             Specificity : 0.9310
#          Pos Pred Value : 0.9333
#          Neg Pred Value : 0.9643
#              Prevalence : 0.5000
#          Detection Rate : 0.4828
#    Detection Prevalence : 0.5172
#       Balanced Accuracy : 0.9483
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div>
<h3 id="g-knn-modeling">g) KNN Modeling</h3>

<p>Scale the parameters later.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">knnAuto<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(mpg01<span style="color:#f92672">~</span>cylinders<span style="color:#f92672">+</span>displacement<span style="color:#f92672">+</span>horsepower,data<span style="color:#f92672">=</span>autoTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;knn&#34;</span>)</code></pre></div>
<p>Plot <code>KNN</code> with the best parameters.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(knnCaret)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-59-1.png"   />

        
    </figure>



<p>Evidently, the accuracy increases with an increase in the number of
neighbors considered.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(knnAuto, print.thres <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.5</span>, type<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;S&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-60-1.png"   />

        
    </figure>



<p>So we can see that \(5\) neighbors is a good compromise.</p>

<h2 id="question-4.12---pages-172-173">Question 4.12 - Pages 172-173</h2>

<p>This problem involves writing functions.</p>

<p><strong>(a)</strong> Write a function, <code>Power()</code> , that prints out the result of
raising 2 to the 3rd power. In other words, your function should compute
2^3 and print out the results.</p>

<p><em>Hint: Recall that <code>x^a</code> raises x to the power a. Use the <code>print()</code>
function to output the result.</em></p>

<p><strong>(b)</strong> Create a new function, <code>Power2()</code> , that allows you to pass any
two numbers, <code>x</code> and <code>a</code> , and prints out the value of <code>x^a</code> . You can
do this by beginning your function with the line</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">Power2<span style="color:#f92672">=</span><span style="color:#a6e22e">function</span>(x,a){}</code></pre></div>
<p>You should be able to call your function by entering, for instance,</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">Power2</span>(<span style="color:#ae81ff">3</span>,<span style="color:#ae81ff">8</span>)</code></pre></div>
<p>on the command line. This should output the value of \(3^8\), namely,
\(6,651\).</p>

<p><strong>&copy;</strong> Using the <code>Power2()</code> function that you just wrote, compute \(10^3\),
\(8^{17}\), and \(131^3\).</p>

<p><strong>(d)</strong> Now create a new function, <code>Power3()</code>, that actually <em>returns</em> the
result <code>x^a</code> as an <code>R</code> object, rather than simply printing it to the
screen. That is, if you store the value <code>x^a</code> in an object called
<code>result</code> within your function, then you can simply <code>return()</code> this
result, using the following line:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">return</span>(result)</code></pre></div>
<p>The line above should be the last line in your function, before the <code>}</code>
symbol.</p>

<p><strong>(e)</strong> Now using the <code>Power3()</code> function, create a plot of \(f(x)=x^2\).
The <em>x</em>-axis should display a range of integers from \(1\) to \(10\), and
the <em>y</em>-axis should display \(x^2\) . Label the axes appropriately, and
use an appropriate title for the figure. Consider displaying either the
<em>x</em>-axis, the <em>y</em>-axis, or both on the log-scale. You can do this by
using <code>log=‘‘x’’</code>, <code>log=‘‘y’’</code>, or <code>log=‘‘xy’’</code> as arguments to the
<code>plot()</code> function.</p>

<p><strong>(f)</strong> Create a function, <code>PlotPower()</code> , that allows you to create a
plot of <code>x</code> against <code>x^a</code> for a fixed <code>a</code> and for a range of values of
<code>x</code>. For instance, if you call</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">PlotPower </span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">10</span> ,<span style="color:#ae81ff">3</span>)</code></pre></div>
<p>then a plot should be created with an <em>x</em>-axis taking on values
\(1,2,&hellip;,10\) and a <em>y</em>-axis taking on values \(1^3,2^3,&hellip;,10^3\)</p>

<h3 id="answer-2">Answer</h3>

<h3 id="a-create-a-squaring-function">a) Create a Squaring Function</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">Power<span style="color:#f92672">=</span><span style="color:#a6e22e">function</span>(x){<span style="color:#a6e22e">print</span>(<span style="color:#ae81ff">2</span>^x)}
<span style="color:#a6e22e">Power</span>(<span style="color:#ae81ff">3</span>)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 8</code></pre></div>
<h3 id="b-generalizing-power-to-arbitrary-numbers">b) Generalizing Power to arbitrary numbers</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">Power2<span style="color:#f92672">=</span><span style="color:#a6e22e">function</span>(x,a){<span style="color:#a6e22e">print</span>(x^a)}</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">Power2</span>(<span style="color:#ae81ff">3</span>,<span style="color:#ae81ff">8</span>)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 6561</code></pre></div>
<h3 id="c-random-testing-of-power2">c) Random Testing of Power2</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">Power2</span>(<span style="color:#ae81ff">10</span>,<span style="color:#ae81ff">3</span>)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 1000</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">Power2</span>(<span style="color:#ae81ff">8</span>,<span style="color:#ae81ff">17</span>)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 2.2518e+15</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">Power2</span>(<span style="color:#ae81ff">131</span>,<span style="color:#ae81ff">2</span>)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># [1] 17161</code></pre></div>
<h3 id="d-return-a-value">d) Return a value</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">Power3<span style="color:#f92672">=</span><span style="color:#a6e22e">function</span>(x,a){<span style="color:#a6e22e">return</span>(x^a)}</code></pre></div>
<h3 id="e-plot-something-with-power3">e) Plot something with Power3</h3>

<p>Actually now would be a good place to introduce <code>LaTeX</code> labeling.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e">#install.packages(&#34;latex2exp&#34;)</span>
<span style="color:#a6e22e">library</span>(latex2exp)</code></pre></div>
<p>No log scale.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">qplot</span>(x<span style="color:#f92672">=</span><span style="color:#a6e22e">seq</span>(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">10</span>),y<span style="color:#f92672">=</span><span style="color:#a6e22e">Power3</span>(<span style="color:#a6e22e">seq</span>(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">10</span>),<span style="color:#ae81ff">2</span>)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">ggtitle</span>(<span style="color:#e6db74">&#34;Function without a log scale&#34;</span>) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span> <span style="color:#a6e22e">xlab</span>(<span style="color:#e6db74">&#34;X&#34;</span>) <span style="color:#f92672">+</span> <span style="color:#a6e22e">ylab</span>(<span style="color:#a6e22e">TeX</span>(<span style="color:#e6db74">&#34;$X^2$&#34;</span>))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-67-1.png"   />

        
    </figure>



<p>With a log scale.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">qplot</span>(x<span style="color:#f92672">=</span><span style="color:#a6e22e">seq</span>(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">10</span>),y<span style="color:#f92672">=</span><span style="color:#a6e22e">Power3</span>(<span style="color:#a6e22e">seq</span>(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">10</span>),<span style="color:#ae81ff">2</span>)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">ggtitle</span>(<span style="color:#e6db74">&#34;Function with a log scale&#34;</span>) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_point</span>() <span style="color:#f92672">+</span> <span style="color:#a6e22e">xlab</span>(<span style="color:#e6db74">&#34;X&#34;</span>) <span style="color:#f92672">+</span> <span style="color:#a6e22e">ylab</span>(<span style="color:#a6e22e">TeX</span>(<span style="color:#e6db74">&#34;$X^2$&#34;</span>)) <span style="color:#f92672">+</span> <span style="color:#a6e22e">scale_y_log10</span>()</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-68-1.png"   />

        
    </figure>



<h3 id="f-plotpower-function">f) PlotPower Function</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">PlotPower<span style="color:#f92672">=</span><span style="color:#a6e22e">function</span>(xrange,pow){<span style="color:#a6e22e">return</span>(<span style="color:#a6e22e">qplot</span>(x<span style="color:#f92672">=</span>xrange,y<span style="color:#f92672">=</span><span style="color:#a6e22e">Power3</span>(xrange,pow)))}</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">plotter<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">PlotPower</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">10</span>,<span style="color:#ae81ff">3</span>)
plotter</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-70-1.png"   />

        
    </figure>



<p>The <a href="http://www.cookbook-r.com/Graphs/Titles%5F(ggplot2)/" target="_blank">R Cookbook</a>
is quite neat for some simple tasks like this.</p>

<h2 id="question-4.13---pages-173">Question 4.13 - Pages 173</h2>

<p>Using the <code>Boston</code> data set, fit classification models in order to
predict whether a given suburb has a crime rate above or below the
median. Explore logistic regression, LDA, and KNN models using various
subsets of the predictors. Describe your findings.</p>

<h3 id="answer-3">Answer</h3>

<p>OK, to speed this up, I will simply run through all the work done on the
<code>Auto</code> set. Recall that details about this data-set are
<a href="https://www.cs.toronto.edu/~delve/data/boston/bostonDetail.html" target="_blank">also
here</a>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">boston<span style="color:#f92672">&lt;-</span>MASS<span style="color:#f92672">::</span>Boston</code></pre></div>
<ul>
<li>Check unique values</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">boston <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(unique) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(length)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#    crim      zn   indus    chas     nox      rm     age     dis     rad     tax
#     504      26      76       2      81     446     356     412       9      66
# ptratio   black   lstat    medv
#      46     357     455     229</code></pre></div>
<p><code>CHAS</code> is of course something which should be a factor, and with <code>RAD</code>
having only \(9\) levels, I&rsquo;m inclined to make it a factor as well.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">boston<span style="color:#f92672">&lt;-</span>boston <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">mutate</span>(rad<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(rad),chas<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(chas))</code></pre></div>
<ul>
<li>Make a median variable</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">boston<span style="color:#f92672">$</span>highCrime<span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">ifelse</span>(boston<span style="color:#f92672">$</span>crim<span style="color:#f92672">&lt;</span>boston<span style="color:#f92672">$</span>crim <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">median</span>(),<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">1</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">factor</span>()</code></pre></div>
<ul>
<li>Take a look at the data</li>
</ul>

<p>Some box-plots:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">boston <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">pivot_longer</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(rad,chas,highCrime),names_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Param&#34;</span>,values_to<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Value&#34;</span>) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">ggplot</span>(<span style="color:#a6e22e">aes</span>(x<span style="color:#f92672">=</span>highCrime,y<span style="color:#f92672">=</span>Value,fill<span style="color:#f92672">=</span>chas)) <span style="color:#f92672">+</span>
  <span style="color:#a6e22e">geom_boxplot</span>()<span style="color:#f92672">+</span>
  <span style="color:#a6e22e">facet_wrap</span>(<span style="color:#f92672">~</span>Param,scales<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;free_y&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-75-1.png"   />

        
    </figure>



<p>It is surprising, but evidently the <code>CHAS</code> variable is strangely
relevant. 1 implies the tract bounds the river, otherwise 0.</p>

<ul>
<li>Correlations</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">boston <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">c</span>(rad,chas,highCrime)) <span style="color:#f92672">%&gt;%</span> cor</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#               crim         zn      indus        nox         rm        age
# crim     1.0000000 -0.2004692  0.4065834  0.4209717 -0.2192467  0.3527343
# zn      -0.2004692  1.0000000 -0.5338282 -0.5166037  0.3119906 -0.5695373
# indus    0.4065834 -0.5338282  1.0000000  0.7636514 -0.3916759  0.6447785
# nox      0.4209717 -0.5166037  0.7636514  1.0000000 -0.3021882  0.7314701
# rm      -0.2192467  0.3119906 -0.3916759 -0.3021882  1.0000000 -0.2402649
# age      0.3527343 -0.5695373  0.6447785  0.7314701 -0.2402649  1.0000000
# dis     -0.3796701  0.6644082 -0.7080270 -0.7692301  0.2052462 -0.7478805
# tax      0.5827643 -0.3145633  0.7207602  0.6680232 -0.2920478  0.5064556
# ptratio  0.2899456 -0.3916785  0.3832476  0.1889327 -0.3555015  0.2615150
# black   -0.3850639  0.1755203 -0.3569765 -0.3800506  0.1280686 -0.2735340
# lstat    0.4556215 -0.4129946  0.6037997  0.5908789 -0.6138083  0.6023385
# medv    -0.3883046  0.3604453 -0.4837252 -0.4273208  0.6953599 -0.3769546
#                dis        tax    ptratio      black      lstat       medv
# crim    -0.3796701  0.5827643  0.2899456 -0.3850639  0.4556215 -0.3883046
# zn       0.6644082 -0.3145633 -0.3916785  0.1755203 -0.4129946  0.3604453
# indus   -0.7080270  0.7207602  0.3832476 -0.3569765  0.6037997 -0.4837252
# nox     -0.7692301  0.6680232  0.1889327 -0.3800506  0.5908789 -0.4273208
# rm       0.2052462 -0.2920478 -0.3555015  0.1280686 -0.6138083  0.6953599
# age     -0.7478805  0.5064556  0.2615150 -0.2735340  0.6023385 -0.3769546
# dis      1.0000000 -0.5344316 -0.2324705  0.2915117 -0.4969958  0.2499287
# tax     -0.5344316  1.0000000  0.4608530 -0.4418080  0.5439934 -0.4685359
# ptratio -0.2324705  0.4608530  1.0000000 -0.1773833  0.3740443 -0.5077867
# black    0.2915117 -0.4418080 -0.1773833  1.0000000 -0.3660869  0.3334608
# lstat   -0.4969958  0.5439934  0.3740443 -0.3660869  1.0000000 -0.7376627
# medv     0.2499287 -0.4685359 -0.5077867  0.3334608 -0.7376627  1.0000000</code></pre></div>
<p>Now, unsurprisingly, there&rsquo;s nothing which is really strongly correlated
here for some reason.</p>

<ul>
<li>Train test splits</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">set.seed</span>(<span style="color:#ae81ff">1984</span>)
trainIndCri <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">createDataPartition</span>(boston<span style="color:#f92672">$</span>highCrime, <span style="color:#75715e"># Factor, so class sampling</span>
                                p<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>, <span style="color:#75715e"># 70-30 train-test</span>
                                list<span style="color:#f92672">=</span><span style="color:#66d9ef">FALSE</span>, <span style="color:#75715e"># No lists</span>
                                times<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>) <span style="color:#75715e"># No bootstrap</span>
bostonTrain<span style="color:#f92672">&lt;-</span>boston[trainIndCri,]
bostonTest<span style="color:#f92672">&lt;-</span>boston[<span style="color:#f92672">-</span>trainIndCri,]</code></pre></div>
<ul>
<li>Make a bunch of models</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glmBos.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">glm</span>(highCrime<span style="color:#f92672">~</span>., data<span style="color:#f92672">=</span>bostonTrain, family<span style="color:#f92672">=</span>binomial)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Warning: glm.fit: algorithm did not converge</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">glmBos.probs <span style="color:#f92672">=</span> <span style="color:#a6e22e">predict</span>(glmBos.fit,bostonTest, type <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;response&#34;</span>)
glmBos.pred <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">length</span>(glmBos.probs))
glmBos.pred[glmBos.probs<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0.5</span>]<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>
glmBos.pred<span style="color:#f92672">=</span><span style="color:#a6e22e">factor</span>(glmBos.pred)
<span style="color:#a6e22e">confusionMatrix</span>(glmBos.pred,bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 68  6
#          1  7 69
#
#                Accuracy : 0.9133
#                  95% CI : (0.8564, 0.953)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.8267
#
#  Mcnemar&#39;s Test P-Value : 1
#
#             Sensitivity : 0.9067
#             Specificity : 0.9200
#          Pos Pred Value : 0.9189
#          Neg Pred Value : 0.9079
#              Prevalence : 0.5000
#          Detection Rate : 0.4533
#    Detection Prevalence : 0.4933
#       Balanced Accuracy : 0.9133
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">bostonLDA<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(highCrime<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>bostonTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;lda&#39;</span>)
bostonQDA<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(highCrime<span style="color:#f92672">~</span>tax<span style="color:#f92672">+</span>crim,data<span style="color:#f92672">=</span>bostonTrain,method<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;qda&#39;</span>)
bostonKNN<span style="color:#f92672">=</span><span style="color:#a6e22e">train</span>(highCrime<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>bostonTrain,preProcess <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#e6db74">&#34;center&#34;</span>,<span style="color:#e6db74">&#34;scale&#34;</span>),method<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;knn&#39;</span>)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">bLDAp<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(bostonLDA,bostonTest)
bQDAp<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(bostonQDA,bostonTest)
bKNNp<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(bostonKNN,bostonTest)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confusionMatrix</span>(bLDAp,bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 72  6
#          1  3 69
#
#                Accuracy : 0.94
#                  95% CI : (0.8892, 0.9722)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.88
#
#  Mcnemar&#39;s Test P-Value : 0.505
#
#             Sensitivity : 0.9600
#             Specificity : 0.9200
#          Pos Pred Value : 0.9231
#          Neg Pred Value : 0.9583
#              Prevalence : 0.5000
#          Detection Rate : 0.4800
#    Detection Prevalence : 0.5200
#       Balanced Accuracy : 0.9400
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confusionMatrix</span>(bQDAp,bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 73  5
#          1  2 70
#
#                Accuracy : 0.9533
#                  95% CI : (0.9062, 0.981)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.9067
#
#  Mcnemar&#39;s Test P-Value : 0.4497
#
#             Sensitivity : 0.9733
#             Specificity : 0.9333
#          Pos Pred Value : 0.9359
#          Neg Pred Value : 0.9722
#              Prevalence : 0.5000
#          Detection Rate : 0.4867
#    Detection Prevalence : 0.5200
#       Balanced Accuracy : 0.9533
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confusionMatrix</span>(bKNNp,bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Confusion Matrix and Statistics
#
#           Reference
# Prediction  0  1
#          0 74  6
#          1  1 69
#
#                Accuracy : 0.9533
#                  95% CI : (0.9062, 0.981)
#     No Information Rate : 0.5
#     P-Value [Acc &gt; NIR] : &lt;2e-16
#
#                   Kappa : 0.9067
#
#  Mcnemar&#39;s Test P-Value : 0.1306
#
#             Sensitivity : 0.9867
#             Specificity : 0.9200
#          Pos Pred Value : 0.9250
#          Neg Pred Value : 0.9857
#              Prevalence : 0.5000
#          Detection Rate : 0.4933
#    Detection Prevalence : 0.5333
#       Balanced Accuracy : 0.9533
#
#        &#39;Positive&#39; Class : 0
#</code></pre></div>
<p>Clearly in this particular case, an LDA model seems to be working out
the best for this data when trained on all the parameters, though
Logistic Regression is doing quite well too.</p>

<ul>
<li>Notes on KNN</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(bostonKNN)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-84-1.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(bostonKNN, print.thres <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.5</span>, type<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;S&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-85-1.png"   />

        
    </figure>



<ul>
<li>Comparison</li>
</ul>

<p>Finally, we will quickly plot some indicative measures.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">knnBosROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(bKNNp),response<span style="color:#f92672">=</span>bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = 0, case = 1</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">logiBosROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(glmBos.probs),response<span style="color:#f92672">=</span>bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = 0, case = 1
# Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">ldaBosROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(bLDAp),response<span style="color:#f92672">=</span>bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = 0, case = 1
# Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">qdaBosROC<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">roc</span>(predictor<span style="color:#f92672">=</span><span style="color:#a6e22e">as.numeric</span>(bQDAp),response<span style="color:#f92672">=</span>bostonTest<span style="color:#f92672">$</span>highCrime)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text"># Setting levels: control = 0, case = 1
# Setting direction: controls &lt; cases</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">ggroc</span>(<span style="color:#a6e22e">list</span>(KNN<span style="color:#f92672">=</span>knnBosROC,Logistic<span style="color:#f92672">=</span>logiBosROC,LDA<span style="color:#f92672">=</span>ldaBosROC,QDA<span style="color:#f92672">=</span>qdaBosROC))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol2/unnamed-chunk-87-1.png"   />

        
            <figcaption class="center" >Figure 14: plot of chunk unnamed-chunk-87</figcaption>
        
    </figure>



<p>OK, one of the reasons why these models do so well is because they are
all assuming an equal distribution of train and test classes, and they
use <code>crim</code> itself as a predictor. This is no doubt a strong reason why
these models uniformly perform so well. I&rsquo;d say 5 is the best option.</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:fn-1">James, G., Witten, D., Hastie, T., &amp; Tibshirani, R. (2013). An Introduction to Statistical Learning: with Applications in R. Berlin, Germany: Springer Science &amp; Business Media.
 <a class="footnote-return" href="#fnref:fn-1"><sup>[return]</sup></a></li>
<li id="fn:fn-2">A good introduction to the caret and skimr packages <a href="https://www.machinelearningplus.com/machine-learning/caret-package/" target="_blank">is here</a>
 <a class="footnote-return" href="#fnref:fn-2"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
        </item>
        
        <item>
            <title>Pandora and Proxychains</title>
            <link>https://rgoswami.me/posts/pandora-proxychains/</link>
            <pubDate>Sat, 15 Feb 2020 05:28:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/pandora-proxychains/</guid>
            <description>Background  Pandora doesn&amp;rsquo;t work outside the states I keep forgetting how to set-up proxychains  Proxychains Technically this article expects proxychains-ng, which seems to be the more up-to-date fork of the original proxychains.
 Install proxychains-ng
# I am on archlinux.. sudo pacman -S proxychains-ng Copy the configuration to the $HOME directory
cp /etc/proxychains.conf . Edit said configuration to add some US-based proxy
  In my particular case, I don&amp;rsquo;t keep the tor section enabled.</description>
            <content type="html"><![CDATA[

<h2 id="background">Background</h2>

<ul>
<li>Pandora doesn&rsquo;t work outside the states</li>
<li>I keep forgetting how to set-up <code>proxychains</code></li>
</ul>

<h2 id="proxychains">Proxychains</h2>

<p>Technically this article <a href="https://github.com/rofl0r/proxychains-ng" target="_blank">expects proxychains-ng</a>, which seems to be the more
up-to-date fork of the original <code>proxychains</code>.</p>

<ol>
<li><p>Install <code>proxychains-ng</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># I am on archlinux..</span>
sudo pacman -S proxychains-ng</code></pre></div></li>

<li><p>Copy the configuration to the <code>$HOME</code> directory</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cp /etc/proxychains.conf .</code></pre></div></li>

<li><p>Edit said configuration to add some US-based proxy</p></li>
</ol>

<p>In my particular case, I don&rsquo;t keep the tor section enabled.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">tail $HOME/proxychains.conf</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#
#       proxy types: http, socks4, socks5
#        ( auth types supported: &#34;basic&#34;-http  &#34;user/pass&#34;-socks )
#
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to &#34;tor&#34;
# socks4 	127.0.0.1 9050</code></pre></div>
<p>I actually use <a href="https://windscribe.com" target="_blank">Windscribe</a> for my VPN needs, and they have a neat <a href="https://windscribe.com/getconfig/socks" target="_blank">SOCKS5 proxy
setup</a>. This works out to a line like <code>socks5 $IP $PORT $USERNAME $PASS</code> being
added. The default generator gives you a pretty server name, but to get the IP
I use <code>ping $SERVER</code> and put that in the <code>conf</code> file.</p>

<h2 id="pandora">Pandora</h2>

<p>I use the excellent <code>pianobar</code> frontend.</p>

<ol>
<li><p>Get <a href="https://github.com/PromyLOPh/pianobar" target="_blank">pianobar</a></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo pacman -S pianobar</code></pre></div></li>

<li><p>Use it with <code>proxychains</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">proxychains pianobar</code></pre></div></li>

<li><p>Profit</p></li>
</ol>

<p>I also like setting up some defaults to make life easier:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">mkdir -p ~/.config/pianobar
vim ~/.config/pianobar/config</code></pre></div>
<p>I normally set the following (inspired by the <a href="https://wiki.archlinux.org/index.php/Pianobar" target="_blank">ArchWiki</a>):</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-conf" data-lang="conf">audio_quality = {high, medium, low}
autostart_station = $ID
password = &#34;$PASS&#34;
user = &#34;$emailID&#34;</code></pre></div>
<p>The <code>autostart_station ID</code> can be obtained by inspecting the terminal output
during an initial run. I usually set it to the QuickMix station.</p>
]]></content>
        </item>
        
        <item>
            <title>Replacing Jupyter with Orgmode</title>
            <link>https://rgoswami.me/posts/jupyter-orgmode/</link>
            <pubDate>Thu, 13 Feb 2020 22:36:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/jupyter-orgmode/</guid>
            <description>Background  I dislike Jupyter notebooks (and JupyterHub) a lot EIN is really not much of a solution either  In the past I have written some posts on TeX with JupyterHub and discussed ways to use virtual Python with JupyterHub in a more reasonable manner.
However, I personally found that EIN was a huge pain to work with, and I mostly ended up working with the web-interface anyway.</description>
            <content type="html"><![CDATA[

<h2 id="background">Background</h2>

<ul>
<li>I dislike Jupyter notebooks (and <a href="https://jupyter.org/" target="_blank">JupyterHub</a>) a lot</li>
<li><a href="https://tkf.github.io/emacs-ipython-notebook/" target="_blank">EIN</a> is really not much of a solution either</li>
</ul>

<p>In the past I have written some posts on <a href="https://grimoire.science/latex-and-jupyterhub/" target="_blank">TeX with JupyterHub</a> and discussed ways
to use virtual <a href="https://grimoire.science/python-and-jupyterhub/" target="_blank">Python with JupyterHub</a> in a more reasonable manner.</p>

<p>However, I personally found that EIN was a huge pain to work with, and I mostly
ended up working with the web-interface anyway.</p>

<p>It is a bit redundant to do so, given that at-least for my purposes, the end
result was a LaTeX document. Breaking down the rest of my requirements went a
bit like this:</p>

<dl>
<dt>What exports well to TeX?</dt>
<dd><strong>Org</strong>, Markdown, anything which goes into pandoc</dd>
<dt>What displays code really well?</dt>
<dd>LaTeX, Markdown, <strong>Org</strong></dd>
<dt>What allows easy visualization of code snippets?</dt>
<dd>Rmarkdown, RStudio,
JupyterHub, <strong>Org</strong> with babel</dd>
</dl>

<p>Clearly, <a href="https://orgmode.org/manual/" target="_blank">orgmode</a> is the common denominator, and ergo, a perfect JupyterHub alternative.</p>

<h2 id="setup">Setup</h2>

<p>Throughout this post I will assume the following structure:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">tree tmp
mkdir -p tmp/images
touch tmp/myFakeJupyter.org</code></pre></div>
<table>
<thead>
<tr>
<th>tmp</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>

<tbody>
<tr>
<td>├──</td>
<td>images</td>
<td></td>
<td></td>
</tr>

<tr>
<td>└──</td>
<td>myFakeJupyter.org</td>
<td></td>
<td></td>
</tr>

<tr>
<td>1</td>
<td>directory,</td>
<td>1</td>
<td>file</td>
</tr>
</tbody>
</table>

<p>As is evident, we have a folder <code>tmp</code> which will have all the things we need for
dealing with our setup.</p>

<h3 id="virtual-python">Virtual Python</h3>

<p>Without waxing too eloquent on the whole reason behind doing this, since I will
rant about virtual python management systems elsewhere, here I will simply
describe my preferred method, which is <a href="https://python-poetry.org/" target="_blank">using poetry</a>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># In a folder above tmp</span>
poetry init
poetry add numpy matplotlib scipy pandas</code></pre></div>
<p>The next part is optional, but a good idea if you figure out <a href="https://direnv.net/" target="_blank">using direnv</a> and
have configured <code>layout_poetry</code> as <a href="https://rgoswami.me/posts/poetry-direnv" target="_blank">described here</a>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># Same place as the poetry files</span>
echo <span style="color:#e6db74">&#34;layout_poetry()&#34;</span> &gt;&gt; .envrc</code></pre></div>
<p><strong>Note:</strong></p>

<ul>
<li>We can nest an arbitrary number of the <code>tmp</code> structures under a single place
we define the poetry setup</li>
<li>I prefer using <code>direnv</code> to ensure that I never forget to hook into the right environment</li>
</ul>

<h2 id="orgmode">Orgmode</h2>

<p>This is not an introduction to org, however in particular, there are some basic
settings to keep in mind to make sure the set-up works as expected.</p>

<h3 id="indentation">Indentation</h3>

<p>Python is notoriously weird about whitespace, so we will ensure that our export
process does not mangle whitespace and offend the python interpreter. We will
have the following line at the top of our <code>orgmode</code> file:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-orgmode" data-lang="orgmode"><span style="color:#75715e"># -*- org-src-preserve-indentation: t; org-edit-src-content: 0; -*-</span></code></pre></div>
<p><strong>Note:</strong></p>

<ul>
<li>this post is actually generating the file being discussed here by</li>
</ul>

<p><a href="https://orgmode.org/manual/Extracting-Source-Code.html" target="_blank">tangling the file</a></p>

<ul>
<li>You can get the <a href="https://github.com/HaoZeke/haozeke.github.io/blob/src/content-org/tmp/myFakeJupyter.org" target="_blank">whole file here</a></li>
</ul>

<h3 id="tex-settings">TeX Settings</h3>

<p>These are also basically optional, but at the very least you will need the
following:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-orgmode" data-lang="orgmode"><span style="color:#75715e">#+author</span><span style="color:#75715e">: Rohit Goswami</span>
<span style="color:#75715e">#+title</span><span style="color:#75715e">: Whatever</span>
<span style="color:#75715e">#+subtitle</span><span style="color:#75715e">: Wittier line about whatever</span>
<span style="color:#75715e">#+date</span><span style="color:#75715e">: \today</span>
<span style="color:#75715e">#+OPTIONS</span><span style="color:#75715e">: toc:nil</span></code></pre></div>
<p>I actually use a lot of math using the <code>TeX</code> input mode in Emacs, so I like the
following settings for math:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-orgmode" data-lang="orgmode"><span style="color:#75715e"># For math display</span>
<span style="color:#75715e">#+LATEX_HEADER</span><span style="color:#75715e">: \usepackage{amsfonts}</span>
<span style="color:#75715e">#+LATEX_HEADER</span><span style="color:#75715e">: \usepackage{unicode-math}</span></code></pre></div>
<p>There are a bunch of other settings which may be used, but these are the bare
minimum, more on that would be in a snippet anyway.</p>

<p><strong>Note:</strong></p>

<ul>
<li>rendering math in the <code>orgmode</code> file in this manner requires that we
use <code>XeTeX</code> to compile the final file</li>
</ul>

<h3 id="org-python">Org-Python</h3>

<p>We essentially need to ensure that:</p>

<ul>
<li>Babel uses our virtual python</li>
<li>The same session is used for each block</li>
</ul>

<p>We will get our poetry python pretty easily:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">which python</code></pre></div>
<p>Now we will use this as a common <code>header-arg</code> passed into the property drawer to
make sure we don&rsquo;t need to set them in every code block.</p>

<p>We can use the following structure in our file:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-orgmode" data-lang="orgmode">\* Python Stuff
<span style="color:#75715e">  :PROPERTIES:
</span><span style="color:#75715e"></span><span style="color:#75715e">  :header-args:    :python /home/haozeke/.cache/pypoetry/virtualenvs/test-2aLV_5DQ-py3.8/bin/python :session One
</span><span style="color:#75715e"></span><span style="color:#75715e">  :END:</span>
Now we can simply work with code as we normally would
\#+BEGIN_SRC python
print(&#34;Hello World&#34;)
\#+END_SRC</code></pre></div>
<p><strong>Note:</strong></p>

<ul>
<li>For some reason, this property needs to be set on <strong>every</strong> heading (as of Feb 13 2020)</li>
<li>In the actual file you will want to remove extraneous  \ symbols:

<ul>
<li>\* → *</li>
<li>\#+BEGIN_SRC → #+BEGIN_SRC</li>
<li>\#+END_SRC → #+END_SRC</li>
</ul></li>
</ul>

<h3 id="python-images-and-orgmode">Python Images and Orgmode</h3>

<p>To view images in <code>orgmode</code> as we would in a JupyterLab notebook, we will use a
slight trick.</p>

<ul>
<li>We will ensure that the code block returns a file object with the arguments</li>

<li><p>The code block should end with a print statement to actually generate the file
name</p>

<p>So we want a code block like this:</p></li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#+BEGIN_SRC python :results output file :exports both
import matplotlib.pyplot as plt
from sklearn.datasets.samples_generator import make_circles
X, y = make_circles(100, factor=.1, noise=.1)
plt.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap=&#39;autumn&#39;)
plt.xlabel(&#39;x1&#39;)
plt.ylabel(&#39;x2&#39;)
plt.savefig(&#39;images/plotCircles.png&#39;, dpi = 300)
print(&#39;images/plotCircles.png&#39;) # return filename to org-mode
#+end_src</code></pre></div>
<p>Which would give the following when executed:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">#+RESULTS:
[[file:images/plotCircles.png]]</code></pre></div>
<p>Since that looks pretty ugly, this will actually look like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">import</span> matplotlib.pyplot <span style="color:#f92672">as</span> plt
<span style="color:#f92672">from</span> sklearn.datasets.samples_generator <span style="color:#f92672">import</span> make_circles
X, y <span style="color:#f92672">=</span> make_circles(<span style="color:#ae81ff">100</span>, factor<span style="color:#f92672">=.</span><span style="color:#ae81ff">1</span>, noise<span style="color:#f92672">=.</span><span style="color:#ae81ff">1</span>)
plt<span style="color:#f92672">.</span>scatter(X[:, <span style="color:#ae81ff">0</span>], X[:, <span style="color:#ae81ff">1</span>], c<span style="color:#f92672">=</span>y, s<span style="color:#f92672">=</span><span style="color:#ae81ff">50</span>, cmap<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;autumn&#39;</span>)
plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;x1&#39;</span>)
plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;x2&#39;</span>)
plt<span style="color:#f92672">.</span>savefig(<span style="color:#e6db74">&#39;images/plotCircles.png&#39;</span>, dpi <span style="color:#f92672">=</span> <span style="color:#ae81ff">300</span>)
<span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#39;images/plotCircles.png&#39;</span>) <span style="color:#75715e"># return filename to org-mode</span></code></pre></div>

    <figure class="left" >
        <img src="/ox-hugo/plotCircles.png"   />

        
    </figure>



<h2 id="conclusions">Conclusions</h2>

<ul>
<li>The last step is of course to export the file as to a <code>TeX</code> file and then
compile that with something like <code>latexmk -pdfxe -shell-escape file.tex</code></li>
</ul>

<p>There are a million and one variations of this of course, but this is enough to
get started.</p>

<p>The whole file is also <a href="https://github.com/HaoZeke/haozeke.github.io/blob/src/content-org/tmp/myFakeJupyter.org" target="_blank">reproduced here</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Poetry and Direnv</title>
            <link>https://rgoswami.me/posts/poetry-direnv/</link>
            <pubDate>Thu, 13 Feb 2020 21:36:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/poetry-direnv/</guid>
            <description>Background  I end up writing about using poetry a lot I almost always use direnv in real life too I don&amp;rsquo;t keep writing mini scripts in my .envrc  Honestly there&amp;rsquo;s nothing here anyone using the direnv wiki will find surprising, but then it is still neat to link back to.
Setting Up Poetry This essentially works by simply modifying the global .direnvrc which essentially gets sourced by every local .</description>
            <content type="html"><![CDATA[

<h2 id="background">Background</h2>

<ul>
<li>I end up writing about using <a href="https://python-poetry.org/" target="_blank">poetry</a> a lot</li>
<li>I almost always <a href="https://direnv.net/" target="_blank">use direnv</a> in real life too</li>
<li>I don&rsquo;t keep writing mini scripts in my <code>.envrc</code></li>
</ul>

<p>Honestly there&rsquo;s nothing here anyone using the <a href="https://github.com/direnv/direnv/wiki/Python" target="_blank">direnv wiki</a> will find surprising,
but then it is still neat to link back to.</p>

<h2 id="setting-up-poetry">Setting Up Poetry</h2>

<p>This essentially works by simply modifying the global <code>.direnvrc</code> which
essentially gets sourced by every local <code>.envrc</code> anyway.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vim $HOME/.direnvrc</code></pre></div>
<p>So what we put in there is the following snippet derived from other snippets <a href="https://github.com/direnv/direnv/wiki/Python" target="_blank">on
the wiki</a>, and is actually now there too.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># PUT this here</span>
layout_poetry<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
  <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> ! -f pyproject.toml <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
    log_error <span style="color:#e6db74">&#39;No pyproject.toml found.  Use `poetry new` or `poetry init` to create one first.&#39;</span>
    exit <span style="color:#ae81ff">2</span>
  <span style="color:#66d9ef">fi</span>

  local VENV<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>dirname <span style="color:#66d9ef">$(</span>poetry run which python<span style="color:#66d9ef">))</span>
  export VIRTUAL_ENV<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>echo <span style="color:#e6db74">&#34;</span>$VENV<span style="color:#e6db74">&#34;</span> | rev | cut -d<span style="color:#e6db74">&#39;/&#39;</span> -f2- | rev<span style="color:#66d9ef">)</span>
  export POETRY_ACTIVE<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
  PATH_add <span style="color:#e6db74">&#34;</span>$VENV<span style="color:#e6db74">&#34;</span>
<span style="color:#f92672">}</span></code></pre></div>
<p>Now we can just make <code>.envrc</code> files with <code>layout_poetry</code> and everything will
<em>just work™</em>.</p>
]]></content>
        </item>
        
        <item>
            <title>Taming Github Notifications</title>
            <link>https://rgoswami.me/posts/ghnotif/</link>
            <pubDate>Wed, 12 Feb 2020 11:36:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/ghnotif/</guid>
            <description>Background As a member of several large organizations, I get a lot of github notifications. Not all of these are of relevance to me. This is especially true of psuedo-monorepo style repositories like the JOSS review system and especially the exercism community.
 I recently (re-)joined the exercism community as a maintainer for the C++ lessons after having been a (sporadic) teacher This was largely in response to a community call to action as the group needed new blood to usher in v3 of the exercism project  Anyway, I have since found that at the small cost of possibly much of my public repo data, I can manage my notifications better with Octobox</description>
            <content type="html"><![CDATA[

<h2 id="background">Background</h2>

<p>As a member of several large organizations, I get a lot of github notifications.
Not all of these are of relevance to me. This is especially true of
<code>psuedo-monorepo</code> style repositories like the <a href="https://github.com/openjournals/joss-reviews" target="_blank">JOSS review system</a> and
<strong>especially</strong> the <a href="https://github.com/exercism/v3/" target="_blank">exercism community</a>.</p>

<ul>
<li>I recently (re-)joined the <a href="https://exercism.io/" target="_blank">exercism community</a> as a maintainer for the C++
lessons after having been a (sporadic) teacher</li>
<li>This was largely in response to a community call to action as the group needed
new blood to usher in <strong>v3</strong> of the exercism project</li>
</ul>

<p>Anyway, I have since found that at the small cost of possibly much of my public
repo data, I can manage my notifications better with <a href="https://octobox.io/" target="_blank">Octobox</a></p>

<h2 id="octobox">Octobox</h2>

<ul>
<li>It appears to be free for now</li>
<li>It syncs on demand (useful)</li>
<li>I can search things quite easily</li>
<li>They have a neat logo</li>
<li>There appear to be many features I probably won&rsquo;t use</li>
</ul>

<p>It looks like this:</p>


    <figure class="left" >
        <img src="/ox-hugo/octoboxSample.png"   />

        
            <figcaption class="center" >Figure 1: Octobox Stock Photo</figcaption>
        
    </figure>


]]></content>
        </item>
        
        <item>
            <title>Site Rationale</title>
            <link>https://rgoswami.me/posts/rationale/</link>
            <pubDate>Tue, 11 Feb 2020 23:28:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/rationale/</guid>
            <description> Why this site exists I have a lot of online presences. I have been around (or at-least, lurking) for over ten years. Almost as long as I have been programming. Anyway, I have a penchant lately for using emacs and honestly there isn&amp;rsquo;t very good support for org-mode files. There are options recently with gatsby as well, but this seemed kinda neat.
What &amp;lsquo;this&amp;rsquo; is  This site is built by Hugo The posts are generated with ox-hugo The theme is based of this excellent one and my modifications are here  What is here  Mostly random thoughts I don&amp;rsquo;t mind people knowing Some tech stuff which isn&amp;rsquo;t coherent enough to be put in any form with references Emacs specific workflows which I might want to write about more than short notes on the config  What isn&amp;rsquo;t here  More coherent thoughts will not be here, that should and will go to my grimoire My doom-emacs configuration Academic stuff is better tracked on Publons or Google Scholar or my pages hosted by my favorite IITK group or UI group  </description>
            <content type="html"><![CDATA[

<h2 id="why-this-site-exists">Why this site exists</h2>

<p>I have a lot of online presences. I have been around (or at-least, lurking) for
over ten years. Almost as long as I have been programming. Anyway, I have a
penchant lately for using <code>emacs</code> and honestly there isn&rsquo;t very good support for
<code>org-mode</code> files. There are options recently with <code>gatsby</code> as well, but this
seemed kinda neat.</p>

<h2 id="what-this-is">What &lsquo;this&rsquo; is</h2>

<ul>
<li>This site is <a href="http://gohugo.io/" target="_blank">built by Hugo</a></li>
<li>The posts are <a href="https://ox-hugo.scripter.co/" target="_blank">generated with ox-hugo</a></li>
<li>The theme is based of this <a href="https://github.com/rhazdon/hugo-theme-hello-friend-ng" target="_blank">excellent one</a> and my modifications <a href="https://github.com/HaoZeke/hugo-theme-hello-friend-ng-hz" target="_blank">are here</a></li>
</ul>

<h2 id="what-is-here">What is here</h2>

<ul>
<li>Mostly random thoughts I don&rsquo;t mind people knowing</li>
<li>Some tech stuff which isn&rsquo;t coherent enough to be put in any form with
references</li>
<li>Emacs specific workflows which I might want to write about more than <a href="https://dotdoom.grimoire.science/" target="_blank">short
notes on the config</a></li>
</ul>

<h2 id="what-isn-t-here">What isn&rsquo;t here</h2>

<ul>
<li>More coherent thoughts will <strong>not</strong> be here, that should and will go to my <a href="https://grimoire.science" target="_blank">grimoire</a></li>
<li>My <a href="https://dotdoom.grimoire.science/" target="_blank">doom-emacs configuration</a></li>
<li>Academic stuff is better tracked on <a href="https://publons.com/researcher/2911170/rohit-goswami/" target="_blank">Publons</a> or <a href="https://scholar.google.co.in/citations?user=36gIdJMAAAAJ&amp;hl=en" target="_blank">Google Scholar</a> or my pages
hosted by my favorite <a href="https://femtolab.science/people/rohit" target="_blank">IITK group</a> or <a href="https://www.hi.is/starfsfolk/rog32" target="_blank">UI group</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>ISLR :: Multiple Linear Regression</title>
            <link>https://rgoswami.me/posts/islr-ch2-ch3/</link>
            <pubDate>Wed, 15 Jan 2020 05:28:00 +0000</pubDate>
            
            <guid>https://rgoswami.me/posts/islr-ch2-ch3/</guid>
            <description>Chapter II - Statistical Learning All the questions are as per the ISL seventh printing&amp;nbsp;1.
Question 2.8 - Pages 54-55 This exercise relates to the College data set, which can be found in the file College.csv. It contains a number of variables for \(777\) different universities and colleges in the US. The variables are
 Private : Public/private indicator Apps : Number of applications received Accept : Number of applicants accepted Enroll : Number of new students enrolled Top10perc : New students from top 10 % of high school class Top25perc : New students from top 25 % of high school class F.</description>
            <content type="html"><![CDATA[

<h2 id="chapter-ii---statistical-learning">Chapter II - Statistical Learning</h2>

<p>All the questions are as per the
<a href="https://faculty.marshall.usc.edu/gareth-james/ISL/" target="_blank">ISL seventh
printing</a>&nbsp;<sup class="footnote-ref" id="fnref:fn-1"><a href="#fn:fn-1">1</a></sup>.</p>

<h3 id="question-2.8---pages-54-55">Question 2.8 - Pages 54-55</h3>

<p>This exercise relates to the <code>College</code> data set, which can be found in
the file <code>College.csv</code>. It contains a number of variables for \(777\)
different universities and colleges in the US. The variables are</p>

<ul>
<li><code>Private</code> : Public/private indicator</li>
<li><code>Apps</code> : Number of applications received</li>
<li><code>Accept</code> : Number of applicants accepted</li>
<li><code>Enroll</code> : Number of new students enrolled</li>
<li><code>Top10perc</code> : New students from top 10 % of high school class</li>
<li><code>Top25perc</code> : New students from top 25 % of high school class</li>
<li><code>F.Undergrad</code> : Number of full-time undergraduates</li>
<li><code>P.Undergrad</code> : Number of part-time undergraduates</li>
<li><code>Outstate</code> : Out-of-state tuition</li>
<li><code>Room.Board</code> : Room and board costs</li>
<li><code>Books</code> : Estimated book costs</li>
<li><code>Personal</code> : Estimated personal spending</li>
<li><code>PhD</code> : Percent of faculty with Ph.D.&rsquo;s</li>
<li><code>Terminal</code> : Percent of faculty with terminal degree</li>
<li><code>S.F.Ratio</code> : Student/faculty ratio</li>
<li><code>perc.alumni</code> : Percent of alumni who donate</li>
<li><code>Expend</code> : Instructional expenditure per student</li>
<li><code>Grad.Rate</code> : Graduation rate</li>
</ul>

<p>Before reading the data into R, it can be viewed in Excel or a text
editor.</p>

<p><strong>(a)</strong> Use the <code>read.csv()</code> function to read the data into R . Call the
loaded data <code>college</code>. Make sure that you have the directory set to the
correct location for the data.</p>

<p><strong>(b)</strong> Look at the data using the <code>fix()</code> function. You should notice
that the ﬁrst column is just the name of each university. We don&rsquo;t
really want R to treat this as data. However, it may be handy to have
these names for later. Try the following commands:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">rownames</span>(college)<span style="color:#f92672">=</span>college[,<span style="color:#ae81ff">1</span>]
<span style="color:#a6e22e">fix</span>(college)</code></pre></div>
<p>You should see that there is now a row.names column with the name of
each university recorded. This means that R has given each row a name
corresponding to the appropriate university. R will not try to perform
calculations on the row names. However, we still need to eliminate the
ﬁrst column in the data where the names are stored. Try:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">college<span style="color:#f92672">=</span>college[,<span style="color:#ae81ff">-1</span>]
<span style="color:#a6e22e">fix</span>(college)</code></pre></div>
<p><strong>&copy;</strong></p>

<ol>
<li>Use the <code>summary()</code> function to produce a numerical summary of the
variables in the data set.</li>
<li>Use the <code>pairs()</code> function to produce a scatterplot matrix of the
ﬁrst ten columns or variables of the data. Recall that you can
reference the first ten columns of a matrix <code>A</code> using <code>A[,1:10]</code> .</li>
<li>Use the <code>plot()</code> function to produce side-by-side boxplots of
Outstate versus Private .</li>
<li>Create a new qualitative variable, called Elite , by binning the
<code>Top10perc</code> variable. We are going to divide universities into two
groups based on whether or not the proportion of students coming from
the top \(10%\) of their high school classes exceeds \(50%\).</li>
</ol>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">Elite <span style="color:#f92672">=</span> <span style="color:#a6e22e">rep</span>(<span style="color:#e6db74">&#34;No&#34;</span>, <span style="color:#a6e22e">nrow</span>(college))
Elite [college<span style="color:#f92672">$</span>Top10perc <span style="color:#f92672">&gt;</span><span style="color:#ae81ff">50</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Yes&#34;</span>
Elite <span style="color:#f92672">=</span> <span style="color:#a6e22e">as.factor </span>(Elite)
college <span style="color:#f92672">=</span> <span style="color:#a6e22e">data.frame </span>(college, Elite)</code></pre></div>
<p>Use the <code>summary()</code> function to see how many elite univer- sities there
are. Now use the <code>plot()</code> function to produce side-by-side boxplots of
<code>Outstate</code> versus <code>Elite</code> .</p>

<ol>
<li>Use the hist() function to produce some histograms with differing
numbers of bins for a few of the quantitative vari- ables. You may
fnd the command <code>par(mfrow=c(2,2))</code> useful: it will divide the print
window into four regions so that four plots can be made
simultaneously. Modifying the arguments to this function will divide
the screen in other ways.</li>
<li>Continue exploring the data, and provide a brief summary of what you
discover.</li>
</ol>

<h4 id="answer">Answer</h4>

<p>Instead of reading in data, for ISLR in particular we can load the
<a href="https://rdrr.io/cran/ISLR/" target="_blank">ISLR library</a> which is on CRAN and
contains the data-sets required for the book.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">install.packages</span>(<span style="color:#e6db74">&#34;ISLR&#34;</span>)</code></pre></div>
<p>Thus, we can now read it in as <code>library(&quot;ISLR&quot;)</code></p>

<p>The remaining sections are meant to be executed, and are marked as such,
with <code>r</code> in <code>{}</code>.</p>

<p><strong>&copy;</strong></p>

<p>We will load the dataset once for the whole document.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">library</span>(<span style="color:#e6db74">&#34;ISLR&#34;</span>)</code></pre></div>
<ol>
<li>Usage of the <code>summary()</code> function</li>
</ol>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(ISLR<span style="color:#f92672">::</span>College)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##  Private        Apps           Accept          Enroll       Top10perc
##  No :212   Min.   :   81   Min.   :   72   Min.   :  35   Min.   : 1.00
##  Yes:565   1st Qu.:  776   1st Qu.:  604   1st Qu.: 242   1st Qu.:15.00
##            Median : 1558   Median : 1110   Median : 434   Median :23.00
##            Mean   : 3002   Mean   : 2019   Mean   : 780   Mean   :27.56
##            3rd Qu.: 3624   3rd Qu.: 2424   3rd Qu.: 902   3rd Qu.:35.00
##            Max.   :48094   Max.   :26330   Max.   :6392   Max.   :96.00
##    Top25perc      F.Undergrad     P.Undergrad         Outstate
##  Min.   :  9.0   Min.   :  139   Min.   :    1.0   Min.   : 2340
##  1st Qu.: 41.0   1st Qu.:  992   1st Qu.:   95.0   1st Qu.: 7320
##  Median : 54.0   Median : 1707   Median :  353.0   Median : 9990
##  Mean   : 55.8   Mean   : 3700   Mean   :  855.3   Mean   :10441
##  3rd Qu.: 69.0   3rd Qu.: 4005   3rd Qu.:  967.0   3rd Qu.:12925
##  Max.   :100.0   Max.   :31643   Max.   :21836.0   Max.   :21700
##    Room.Board       Books           Personal         PhD
##  Min.   :1780   Min.   :  96.0   Min.   : 250   Min.   :  8.00
##  1st Qu.:3597   1st Qu.: 470.0   1st Qu.: 850   1st Qu.: 62.00
##  Median :4200   Median : 500.0   Median :1200   Median : 75.00
##  Mean   :4358   Mean   : 549.4   Mean   :1341   Mean   : 72.66
##  3rd Qu.:5050   3rd Qu.: 600.0   3rd Qu.:1700   3rd Qu.: 85.00
##  Max.   :8124   Max.   :2340.0   Max.   :6800   Max.   :103.00
##     Terminal       S.F.Ratio      perc.alumni        Expend
##  Min.   : 24.0   Min.   : 2.50   Min.   : 0.00   Min.   : 3186
##  1st Qu.: 71.0   1st Qu.:11.50   1st Qu.:13.00   1st Qu.: 6751
##  Median : 82.0   Median :13.60   Median :21.00   Median : 8377
##  Mean   : 79.7   Mean   :14.09   Mean   :22.74   Mean   : 9660
##  3rd Qu.: 92.0   3rd Qu.:16.50   3rd Qu.:31.00   3rd Qu.:10830
##  Max.   :100.0   Max.   :39.80   Max.   :64.00   Max.   :56233
##    Grad.Rate
##  Min.   : 10.00
##  1st Qu.: 53.00
##  Median : 65.00
##  Mean   : 65.46
##  3rd Qu.: 78.00
##  Max.   :118.00</code></pre></div>
<ol>
<li>Usage of <code>pairs()</code></li>
</ol>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">tenColl <span style="color:#f92672">&lt;-</span> ISLR<span style="color:#f92672">::</span>College[,<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">10</span>] <span style="color:#75715e"># For getting the first ten columns</span>
<span style="color:#a6e22e">pairs</span>(tenColl) <span style="color:#75715e"># Scatterplot</span></code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-3-1.png"   />

        
            <figcaption class="center" >Figure 1: Pairs</figcaption>
        
    </figure>



<ol>
<li>Boxplot creation with <code>plot()</code></li>
</ol>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(ISLR<span style="color:#f92672">::</span>College<span style="color:#f92672">$</span>Private,ISLR<span style="color:#f92672">::</span>College<span style="color:#f92672">$</span>Outstate,xlab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Private&#34;</span>,ylab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Outstate&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-4-1.png"   />

        
            <figcaption class="center" >Figure 2: Boxplots</figcaption>
        
    </figure>



<ol>
<li>Binning and plotting</li>
</ol>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">college<span style="color:#f92672">=</span>ISLR<span style="color:#f92672">::</span>College
Elite<span style="color:#f92672">=</span><span style="color:#a6e22e">rep</span>(<span style="color:#e6db74">&#34;No&#34;</span>,<span style="color:#a6e22e">nrow</span>(college))
Elite[college<span style="color:#f92672">$</span>Top10perc<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">50</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Yes&#34;</span>
Elite<span style="color:#f92672">=</span><span style="color:#a6e22e">as.factor</span>(Elite)
college<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">data.frame</span>(college,Elite)
<span style="color:#a6e22e">summary</span>(college<span style="color:#f92672">$</span>Elite)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##  No Yes
## 699  78</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(college<span style="color:#f92672">$</span>Outstate,college<span style="color:#f92672">$</span>Elite,xlab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Outstate&#34;</span>,ylab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Elite&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-6-1.png"   />

        
            <figcaption class="center" >Figure 3: Plotting Outstate and Elite</figcaption>
        
    </figure>



<ol>
<li>Histograms with <code>hist()</code></li>
</ol>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">par</span>(mfrow<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">2</span>))
<span style="color:#a6e22e">hist</span>(college<span style="color:#f92672">$</span>Enroll)
<span style="color:#a6e22e">hist</span>(college<span style="color:#f92672">$</span>perc.alumni, col<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>)
<span style="color:#a6e22e">hist</span>(college<span style="color:#f92672">$</span>Personal, col<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, breaks<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
<span style="color:#a6e22e">hist</span>(college<span style="color:#f92672">$</span>PhD, breaks<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-7-1.png"   />

        
            <figcaption class="center" >Figure 4: Histogram</figcaption>
        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">hist</span>(college<span style="color:#f92672">$</span>Top10perc, col<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;blue&#34;</span>)
<span style="color:#a6e22e">hist</span>(college<span style="color:#f92672">$</span>Outstate, col<span style="color:#f92672">=</span><span style="color:#ae81ff">23</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-7-2.png"   />

        
            <figcaption class="center" >Figure 5: Colored Histogram</figcaption>
        
    </figure>



<ol>
<li>Explorations (graphical)</li>
</ol>

<p>\(0\) implies the faculty have PhDs. It is clear that people donate more
when faculty do not have terminal degrees.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(college<span style="color:#f92672">$</span>Terminal<span style="color:#f92672">-</span>college<span style="color:#f92672">$</span>PhD, college<span style="color:#f92672">$</span>perc.alumni)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-8-1.png"   />

        
            <figcaption class="center" >Figure 6: Terminal degrees and alumni</figcaption>
        
    </figure>



<p>High tuition correlates to high graduation rate.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(college<span style="color:#f92672">$</span>Expend, college<span style="color:#f92672">$</span>Grad.Rate)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-9-1.png"   />

        
            <figcaption class="center" >Figure 7: Tuiton and graduation</figcaption>
        
    </figure>



<p>Low acceptance implies a low student to faculty ratio.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">plot</span>(college<span style="color:#f92672">$</span>Accept <span style="color:#f92672">/</span> college<span style="color:#f92672">$</span>Apps, college<span style="color:#f92672">$</span>S.F.Ratio)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-10-1.png"   />

        
            <figcaption class="center" >Figure 8: Acceptance and Student/Faculty ratio</figcaption>
        
    </figure>



<h3 id="question-2.9---page-56">Question 2.9 - Page 56</h3>

<p>This exercise involves the <code>Auto</code> data set studied in the lab. Make sure
that the missing values have been removed from the data.</p>

<p><strong>(a)</strong> Which of the predictors are quantitative, and which are
qualitative?</p>

<p><strong>(b)</strong> What is the <em>range</em> of each quantitative predictor? You can answer
this using the <code>range()</code> function.</p>

<p><strong>&copy;</strong> What is the mean and standard deviation of each quantitative
predictor?</p>

<p><strong>(d)</strong> Now remove the 10th through 85th observations. What is the range,
mean, and standard deviation of each predictor in the subset of the data
that remains?</p>

<p><strong>(e)</strong> Using the full data set, investigate the predictors graphically,
using scatterplots or other tools of your choice. Create some plots
highlighting the relationships among the predictors. Comment on your
findings.</p>

<p><strong>(f)</strong> Suppose that we wish to predict gas mileage (<code>mpg</code>) on the basis
of the other variables. Do your plots suggest that any of the other
variables might be useful in predicting <code>mpg</code>? Justify your answer.</p>

<h4 id="answer-1">Answer</h4>

<p>Once again, since the dataset is loaded from the library, we will simply
start manipulating it.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Clean data</span>
autoDat<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">na.omit</span>(ISLR<span style="color:#f92672">::</span>Auto) <span style="color:#75715e"># renamed for convenience</span></code></pre></div>
<p><strong>(a)</strong> To determine weather the variables a qualitative or quantitative
we can either inspect the variables by eye, or query the dataset.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(autoDat) <span style="color:#75715e"># Observe the output for variance</span></code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       mpg          cylinders      displacement     horsepower        weight
##  Min.   : 9.00   Min.   :3.000   Min.   : 68.0   Min.   : 46.0   Min.   :1613
##  1st Qu.:17.00   1st Qu.:4.000   1st Qu.:105.0   1st Qu.: 75.0   1st Qu.:2225
##  Median :22.75   Median :4.000   Median :151.0   Median : 93.5   Median :2804
##  Mean   :23.45   Mean   :5.472   Mean   :194.4   Mean   :104.5   Mean   :2978
##  3rd Qu.:29.00   3rd Qu.:8.000   3rd Qu.:275.8   3rd Qu.:126.0   3rd Qu.:3615
##  Max.   :46.60   Max.   :8.000   Max.   :455.0   Max.   :230.0   Max.   :5140
##
##   acceleration        year           origin                      name
##  Min.   : 8.00   Min.   :70.00   Min.   :1.000   amc matador       :  5
##  1st Qu.:13.78   1st Qu.:73.00   1st Qu.:1.000   ford pinto        :  5
##  Median :15.50   Median :76.00   Median :1.000   toyota corolla    :  5
##  Mean   :15.54   Mean   :75.98   Mean   :1.577   amc gremlin       :  4
##  3rd Qu.:17.02   3rd Qu.:79.00   3rd Qu.:2.000   amc hornet        :  4
##  Max.   :24.80   Max.   :82.00   Max.   :3.000   chevrolet chevette:  4
##                                                  (Other)           :365</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">str</span>(autoDat) <span style="color:#75715e"># Directly find find out</span></code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## &#39;data.frame&#39;:    392 obs. of  9 variables:
##  $ mpg         : num  18 15 18 16 17 15 14 14 14 15 ...
##  $ cylinders   : num  8 8 8 8 8 8 8 8 8 8 ...
##  $ displacement: num  307 350 318 304 302 429 454 440 455 390 ...
##  $ horsepower  : num  130 165 150 150 140 198 220 215 225 190 ...
##  $ weight      : num  3504 3693 3436 3433 3449 ...
##  $ acceleration: num  12 11.5 11 12 10.5 10 9 8.5 10 8.5 ...
##  $ year        : num  70 70 70 70 70 70 70 70 70 70 ...
##  $ origin      : num  1 1 1 1 1 1 1 1 1 1 ...
##  $ name        : Factor w/ 304 levels &#34;amc ambassador brougham&#34;,..: 49 36 231 14 161 141 54 223 241 2 ...</code></pre></div>
<p>From the above view, we can see that there is only one listed as a
qualitative variable or factor, and that is <code>name</code>. However, we can also
do this in a cleaner manner or at-least in a different manner with a
function.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">findFactors <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">sapply</span>(autoDat,is.factor)
findFactors</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##        FALSE        FALSE        FALSE        FALSE        FALSE        FALSE
##         year       origin         name
##        FALSE        FALSE         TRUE</code></pre></div>
<p>Though only <strong>name</strong> is listed as a qualitative variable, we note that
<strong>origin</strong> seems to be almost qualitative as well.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">length</span>(<span style="color:#a6e22e">unique</span>(autoDat<span style="color:#f92672">$</span>origin))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## [1] 3</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">unique</span>(autoDat<span style="color:#f92672">$</span>origin)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## [1] 1 3 2</code></pre></div>
<p>Infact we can check that nothing else has this property by repeated
application of <code>sapply</code>, though a pipe would be more satisfying</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">getUniq<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">sapply</span>(autoDat, unique)
getLengths<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">sapply</span>(getUniq,length)
getLengths</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##          127            5           81           93          346           95
##         year       origin         name
##           13            3          301</code></pre></div>
<p>This is really nicer with pipes</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">library</span>(dplyr)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Attaching package: &#39;dplyr&#39;</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## The following objects are masked from &#39;package:stats&#39;:
##
##     filter, lag</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## The following objects are masked from &#39;package:base&#39;:
##
##     intersect, setdiff, setequal, union</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(unique) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(length)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##          127            5           81           93          346           95
##         year       origin         name
##           13            3          301</code></pre></div>
<p>At any rate, we know now that <strong>origin</strong> and <strong>name</strong> are probably
qualitative, and the rest are quantitative.</p>

<p><strong>(b)</strong> Using <code>range()</code></p>

<p>A nice feature of the dataset we have is that the suspected qualitative
variables are at the end of the dataset. So we can simply select the
first \(7\) rows and go nuts on them.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoDat[,<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span>] <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(range) <span style="color:#75715e"># or sapply(autoDat[,1:7],range)</span></code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       mpg cylinders displacement horsepower weight acceleration year
## [1,]  9.0         3           68         46   1613          8.0   70
## [2,] 46.6         8          455        230   5140         24.8   82</code></pre></div>
<p>Once again, more elegant with pipes and <code>subset()</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">autoDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">subset</span>(select<span style="color:#f92672">=-</span><span style="color:#a6e22e">c</span>(name,origin)) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(range)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       mpg cylinders displacement horsepower weight acceleration year
## [1,]  9.0         3           68         46   1613          8.0   70
## [2,] 46.6         8          455        230   5140         24.8   82</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Even simpler with dplyr</span>
autoDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>name,<span style="color:#f92672">-</span>origin) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(range)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       mpg cylinders displacement horsepower weight acceleration year
## [1,]  9.0         3           68         46   1613          8.0   70
## [2,] 46.6         8          455        230   5140         24.8   82</code></pre></div>
<p><strong>&copy;</strong> Mean and standard deviation</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">&lt;-</span> autoDat <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>name,<span style="color:#f92672">-</span>origin)
noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(mean)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##    23.445918     5.471939   194.411990   104.469388  2977.584184    15.541327
##         year
##    75.979592</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(sd)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##     7.805007     1.705783   104.644004    38.491160   849.402560     2.758864
##         year
##     3.683737</code></pre></div>
<p><strong>(d)</strong> Removing observations 10-85 and testing.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors[<span style="color:#f92672">-</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),] <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(mean)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##    24.404430     5.373418   187.240506   100.721519  2935.971519    15.726899
##         year
##    77.145570</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors[<span style="color:#f92672">-</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),] <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(sd)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##     7.867283     1.654179    99.678367    35.708853   811.300208     2.693721
##         year
##     3.106217</code></pre></div>
<p><strong>(e)</strong> Plots for determining relationships</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">par</span>(mfrow<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">2</span>))
<span style="color:#a6e22e">plot</span>(autoDat<span style="color:#f92672">$</span>weight, autoDat<span style="color:#f92672">$</span>horsepower)
<span style="color:#a6e22e">plot</span>(autoDat<span style="color:#f92672">$</span>weight, autoDat<span style="color:#f92672">$</span>acceleration)
<span style="color:#a6e22e">plot</span>(autoDat<span style="color:#f92672">$</span>displacement, autoDat<span style="color:#f92672">$</span>acceleration)
<span style="color:#a6e22e">plot</span>(autoDat<span style="color:#f92672">$</span>cylinders, autoDat<span style="color:#f92672">$</span>acceleration)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-21-1.png"   />

        
            <figcaption class="center" >Figure 9: Relationship determination</figcaption>
        
    </figure>



<ul>
<li>Evidently horsepower is directly proportional to weight but
acceleration is inversely proportional to weight</li>
<li>Acceleration is also inversely proportional to displacement</li>
<li>Cylinders are a poor measure, not surprising since there are only \(5\)
values</li>
</ul>

<p><strong>(f)</strong> Choosing predictors for gas mileage <code>mpg</code></p>

<p>Let us recall certain key elements of the quantitative aspects of the
dataset.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(noFactors) <span style="color:#75715e"># To understand the spread</span></code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       mpg          cylinders      displacement     horsepower        weight
##  Min.   : 9.00   Min.   :3.000   Min.   : 68.0   Min.   : 46.0   Min.   :1613
##  1st Qu.:17.00   1st Qu.:4.000   1st Qu.:105.0   1st Qu.: 75.0   1st Qu.:2225
##  Median :22.75   Median :4.000   Median :151.0   Median : 93.5   Median :2804
##  Mean   :23.45   Mean   :5.472   Mean   :194.4   Mean   :104.5   Mean   :2978
##  3rd Qu.:29.00   3rd Qu.:8.000   3rd Qu.:275.8   3rd Qu.:126.0   3rd Qu.:3615
##  Max.   :46.60   Max.   :8.000   Max.   :455.0   Max.   :230.0   Max.   :5140
##   acceleration        year
##  Min.   : 8.00   Min.   :70.00
##  1st Qu.:13.78   1st Qu.:73.00
##  Median :15.50   Median :76.00
##  Mean   :15.54   Mean   :75.98
##  3rd Qu.:17.02   3rd Qu.:79.00
##  Max.   :24.80   Max.   :82.00</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">getLengths <span style="color:#75715e"># To get the number of unique values</span></code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##          mpg    cylinders displacement   horsepower       weight acceleration
##          127            5           81           93          346           95
##         year       origin         name
##           13            3          301</code></pre></div>
<p>From this we can assert easily that the number of cylinders is not of
much interest for predictions of the mileage.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">par</span>(mfrow<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">3</span>,<span style="color:#ae81ff">2</span>))
<span style="color:#a6e22e">plot</span>(noFactors<span style="color:#f92672">$</span>mpg,noFactors<span style="color:#f92672">$</span>horsepower)
<span style="color:#a6e22e">plot</span>(noFactors<span style="color:#f92672">$</span>mpg,noFactors<span style="color:#f92672">$</span>weight)
<span style="color:#a6e22e">plot</span>(noFactors<span style="color:#f92672">$</span>mpg,noFactors<span style="color:#f92672">$</span>displacement)
<span style="color:#a6e22e">plot</span>(noFactors<span style="color:#f92672">$</span>mpg,noFactors<span style="color:#f92672">$</span>acceleration)
<span style="color:#a6e22e">plot</span>(noFactors<span style="color:#f92672">$</span>mpg,noFactors<span style="color:#f92672">$</span>year)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-23-1.png"   />

        
            <figcaption class="center" >Figure 10: Predictions</figcaption>
        
    </figure>



<ul>
<li>So now we know that the mileage increases when horsepower is low,
weight is low, displacement is low and acceleration is high</li>
</ul>

<p>Where low represents an inverse response and high represents a direct
response.</p>

<ul>
<li>It is also clear that the mileage increases every year</li>
</ul>

<h2 id="chapter-iii---linear-regression">Chapter III - Linear Regression</h2>

<h3 id="question-3.9---page-122">Question 3.9 - Page 122</h3>

<p>This question involves the use of multiple linear regression on the Auto
data set.</p>

<p><strong>(a)</strong> Produce a scatterplot matrix which includes all of the variables
in the data set.</p>

<p><strong>(b)</strong> Compute the matrix of correlations between the variables using the
function <code>cor()</code> . You will need to exclude the name variable, <code>cor()</code>
which is qualitative.</p>

<p><strong>&copy;</strong> Use the <code>lm()</code> function to perform a multiple linear regression
with <code>mpg</code> as the response and all other variables except name as the
predictors. Use the <code>summary()</code> function to print the results. Comment
on the output. For instance:</p>

<ol>
<li>Is there a relationship between the predictors and the response?</li>
<li>Which predictors appear to have a statistically significant
relationship to the response?</li>
<li>What does the coefficient for the year variable suggest?</li>
</ol>

<p><strong>(d)</strong> Use the <code>plot()</code> function to produce diagnostic plots of the
linear regression fit. Comment on any problems you see with the fit. Do
the residual plots suggest any unusually large outliers? Does the
leverage plot identify any observations with unusually high leverage?</p>

<p><strong>(e)</strong> Use the <code>*</code> and <code>:</code> symbols to fit linear regression models with
interaction effects. Do any interactions appear to be statistically
significant?</p>

<p><strong>(f)</strong> Try a few different transformations of the variables, such as
\(\log{X}\), \(\sqrt{X}\), \(X^2\).Comment on your ﬁndings.</p>

<h4 id="answer-2">Answer</h4>

<p>Once again, we will use the dataset from the library.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">cleanAuto <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">na.omit</span>(autoDat)
<span style="color:#a6e22e">summary</span>(cleanAuto) <span style="color:#75715e"># Already created above, so no need to do na.omit again</span></code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       mpg          cylinders      displacement     horsepower        weight
##  Min.   : 9.00   Min.   :3.000   Min.   : 68.0   Min.   : 46.0   Min.   :1613
##  1st Qu.:17.00   1st Qu.:4.000   1st Qu.:105.0   1st Qu.: 75.0   1st Qu.:2225
##  Median :22.75   Median :4.000   Median :151.0   Median : 93.5   Median :2804
##  Mean   :23.45   Mean   :5.472   Mean   :194.4   Mean   :104.5   Mean   :2978
##  3rd Qu.:29.00   3rd Qu.:8.000   3rd Qu.:275.8   3rd Qu.:126.0   3rd Qu.:3615
##  Max.   :46.60   Max.   :8.000   Max.   :455.0   Max.   :230.0   Max.   :5140
##
##   acceleration        year           origin                      name
##  Min.   : 8.00   Min.   :70.00   Min.   :1.000   amc matador       :  5
##  1st Qu.:13.78   1st Qu.:73.00   1st Qu.:1.000   ford pinto        :  5
##  Median :15.50   Median :76.00   Median :1.000   toyota corolla    :  5
##  Mean   :15.54   Mean   :75.98   Mean   :1.577   amc gremlin       :  4
##  3rd Qu.:17.02   3rd Qu.:79.00   3rd Qu.:2.000   amc hornet        :  4
##  Max.   :24.80   Max.   :82.00   Max.   :3.000   chevrolet chevette:  4
##                                                  (Other)           :365</code></pre></div>
<p><strong>(a)</strong> Scatterplot</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">pairs</span>(cleanAuto)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-25-1.png"   />

        
            <figcaption class="center" >Figure 11: Scatterplot</figcaption>
        
    </figure>



<p><strong>(b)</strong> Correlation matrix. For this we exclude the qualitative variables
either by using <code>select</code> or by using the existing <code>noFactors</code> dataset</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># A full set</span>
ISLR<span style="color:#f92672">::</span>Auto <span style="color:#f92672">%&gt;%</span> na.omit <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>name,<span style="color:#f92672">-</span>origin) <span style="color:#f92672">%&gt;%</span> cor</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##                     mpg  cylinders displacement horsepower     weight
## mpg           1.0000000 -0.7776175   -0.8051269 -0.7784268 -0.8322442
## cylinders    -0.7776175  1.0000000    0.9508233  0.8429834  0.8975273
## displacement -0.8051269  0.9508233    1.0000000  0.8972570  0.9329944
## horsepower   -0.7784268  0.8429834    0.8972570  1.0000000  0.8645377
## weight       -0.8322442  0.8975273    0.9329944  0.8645377  1.0000000
## acceleration  0.4233285 -0.5046834   -0.5438005 -0.6891955 -0.4168392
## year          0.5805410 -0.3456474   -0.3698552 -0.4163615 -0.3091199
##              acceleration       year
## mpg             0.4233285  0.5805410
## cylinders      -0.5046834 -0.3456474
## displacement   -0.5438005 -0.3698552
## horsepower     -0.6891955 -0.4163615
## weight         -0.4168392 -0.3091199
## acceleration    1.0000000  0.2903161
## year            0.2903161  1.0000000</code></pre></div>
<p><strong>&copy;</strong> Multiple Linear Regression</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Fit against every variable</span>
lm.fit<span style="color:#f92672">=</span><span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>noFactors)
<span style="color:#a6e22e">summary</span>(lm.fit)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ ., data = noFactors)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -8.6927 -2.3864 -0.0801  2.0291 14.3607
##
## Coefficients:
##                Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)  -1.454e+01  4.764e+00  -3.051  0.00244 **
## cylinders    -3.299e-01  3.321e-01  -0.993  0.32122
## displacement  7.678e-03  7.358e-03   1.044  0.29733
## horsepower   -3.914e-04  1.384e-02  -0.028  0.97745
## weight       -6.795e-03  6.700e-04 -10.141  &lt; 2e-16 ***
## acceleration  8.527e-02  1.020e-01   0.836  0.40383
## year          7.534e-01  5.262e-02  14.318  &lt; 2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 3.435 on 385 degrees of freedom
## Multiple R-squared:  0.8093, Adjusted R-squared:  0.8063
## F-statistic: 272.2 on 6 and 385 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Fit against one variable</span>
noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>horsepower,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ horsepower, data = .)
##
## Residuals:
##      Min       1Q   Median       3Q      Max
## -13.5710  -3.2592  -0.3435   2.7630  16.9240
##
## Coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept) 39.935861   0.717499   55.66   &lt;2e-16 ***
## horsepower  -0.157845   0.006446  -24.49   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 4.906 on 390 degrees of freedom
## Multiple R-squared:  0.6059, Adjusted R-squared:  0.6049
## F-statistic: 599.7 on 1 and 390 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>year,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ year, data = .)
##
## Residuals:
##      Min       1Q   Median       3Q      Max
## -12.0212  -5.4411  -0.4412   4.9739  18.2088
##
## Coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept) -70.01167    6.64516  -10.54   &lt;2e-16 ***
## year          1.23004    0.08736   14.08   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 6.363 on 390 degrees of freedom
## Multiple R-squared:  0.337,  Adjusted R-squared:  0.3353
## F-statistic: 198.3 on 1 and 390 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>acceleration,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ acceleration, data = .)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -17.989  -5.616  -1.199   4.801  23.239
##
## Coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)    4.8332     2.0485   2.359   0.0188 *
## acceleration   1.1976     0.1298   9.228   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 7.08 on 390 degrees of freedom
## Multiple R-squared:  0.1792, Adjusted R-squared:  0.1771
## F-statistic: 85.15 on 1 and 390 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>weight,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ weight, data = .)
##
## Residuals:
##      Min       1Q   Median       3Q      Max
## -11.9736  -2.7556  -0.3358   2.1379  16.5194
##
## Coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept) 46.216524   0.798673   57.87   &lt;2e-16 ***
## weight      -0.007647   0.000258  -29.64   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 4.333 on 390 degrees of freedom
## Multiple R-squared:  0.6926, Adjusted R-squared:  0.6918
## F-statistic: 878.8 on 1 and 390 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>displacement,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> summary</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ displacement, data = .)
##
## Residuals:
##      Min       1Q   Median       3Q      Max
## -12.9170  -3.0243  -0.5021   2.3512  18.6128
##
## Coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)  35.12064    0.49443   71.03   &lt;2e-16 ***
## displacement -0.06005    0.00224  -26.81   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 4.635 on 390 degrees of freedom
## Multiple R-squared:  0.6482, Adjusted R-squared:  0.6473
## F-statistic: 718.7 on 1 and 390 DF,  p-value: &lt; 2.2e-16</code></pre></div>
<ol>
<li><p>Clearly there is a relationship between the predictors and variables,
mostly as described previously, with the following broad trends:</p>

<ul>
<li>Inversely proportional to Horsepower, Weight, and Displacement</li>
</ul></li>

<li><p>The predictors which have a relationship to the response are (based
on R squared values):
\[ all &gt; weight &gt; displacement &gt; horsepower &gt; year &gt; acceleration \]
However, things lower than horsepower are not statistically
significant.</p></li>

<li><p>The visual analysis of the <code>year</code> variable suggests that the mileage
grows every year. However, it is clear from the summary, that there
is no statistical significance of year when used to fit a single
parameter linear model. We note that when we compare this to the
multiple linear regression analysis, we see that the year factor
accounts for \(0.7508\) of the total, that is, the cars become more
efficient every year</p></li>
</ol>

<p><strong>(d)</strong> Lets plot these</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">par</span>(mfrow<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">2</span>))
noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>horsepower,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">plot</span>(main<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Mileage v/s Horsepower&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-28-1.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>weight,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">plot</span>(main<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Mileage v/s Weight&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-28-2.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>year,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">plot</span>(main<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Mileage v/s Year&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-28-3.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>acceleration,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">plot</span>(main<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Mileage v/s Acceleration&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-28-4.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>displacement,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">plot</span>(main<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Mileage v/s Displacement&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-28-5.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>.) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">plot</span>(main<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Mileage Multiple Regression&#34;</span>)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-28-6.png"   />

        
    </figure>



<p>Form this we can see that the fit is not very accurate as there is a
clear curve to the residuals. The 14th point has high leverage, though
it is of a small magnitude. Thus it is not expected to have affected the
plot too much.</p>

<p><strong>We know</strong> that an observation with a studentized residual greater than
\(3\) in absolute value are possible outliers. Hence we must plot this.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Predict and get the plot</span>
fitPlot <span style="color:#f92672">&lt;-</span> noFactors <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>.)
<span style="color:#75715e"># See residuals</span>
<span style="color:#a6e22e">plot</span>(xlab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Prediction&#34;</span>,ylab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Studentized Residual&#34;</span>,x<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(fitPlot),y<span style="color:#f92672">=</span><span style="color:#a6e22e">rstudent</span>(fitPlot))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-29-1.png"   />

        
    </figure>


<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># Try a linear fit of studentized residuals</span>
<span style="color:#a6e22e">par</span>(mfrow<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">2</span>))
<span style="color:#a6e22e">plot</span>(<span style="color:#a6e22e">lm</span>(<span style="color:#a6e22e">predict</span>(fitPlot)<span style="color:#f92672">~</span><span style="color:#a6e22e">rstudent</span>(fitPlot)))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-29-2.png"   />

        
    </figure>



<p>Clearly the studentized residuals are nonlinear w.r.t the prediction.
Also, some points are above the absolute value of \(3\) so they might be
outliers, in keeping with the leverage plot.</p>

<p><strong>(e)</strong> Interaction effects</p>

<p><strong>We recall</strong> that <code>x*y</code> corresponds to <code>x+y+x:y</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># View the correlation matrix</span>
cleanAuto <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">select</span>(<span style="color:#f92672">-</span>name,<span style="color:#f92672">-</span>origin) <span style="color:#f92672">%&gt;%</span> cor</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##                     mpg  cylinders displacement horsepower     weight
## mpg           1.0000000 -0.7776175   -0.8051269 -0.7784268 -0.8322442
## cylinders    -0.7776175  1.0000000    0.9508233  0.8429834  0.8975273
## displacement -0.8051269  0.9508233    1.0000000  0.8972570  0.9329944
## horsepower   -0.7784268  0.8429834    0.8972570  1.0000000  0.8645377
## weight       -0.8322442  0.8975273    0.9329944  0.8645377  1.0000000
## acceleration  0.4233285 -0.5046834   -0.5438005 -0.6891955 -0.4168392
## year          0.5805410 -0.3456474   -0.3698552 -0.4163615 -0.3091199
##              acceleration       year
## mpg             0.4233285  0.5805410
## cylinders      -0.5046834 -0.3456474
## displacement   -0.5438005 -0.3698552
## horsepower     -0.6891955 -0.4163615
## weight         -0.4168392 -0.3091199
## acceleration    1.0000000  0.2903161
## year            0.2903161  1.0000000</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>weight<span style="color:#f92672">*</span>displacement<span style="color:#f92672">*</span>year,data<span style="color:#f92672">=</span>noFactors<span style="color:#a6e22e">[</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),]))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ weight * displacement * year, data = noFactors[(10:85),
##     ])
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -5.3020 -0.9055  0.0966  0.8912  3.7049
##
## Coefficients:
##                            Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)               3.961e+02  2.578e+02   1.537    0.129
## weight                   -1.030e-01  1.008e-01  -1.021    0.311
## displacement             -1.587e+00  1.308e+00  -1.213    0.229
## year                     -4.889e+00  3.623e+00  -1.349    0.182
## weight:displacement       3.926e-04  3.734e-04   1.051    0.297
## weight:year               1.317e-03  1.418e-03   0.929    0.356
## displacement:year         2.150e-02  1.846e-02   1.165    0.248
## weight:displacement:year -5.287e-06  5.253e-06  -1.007    0.318
##
## Residual standard error: 1.8 on 68 degrees of freedom
## Multiple R-squared:  0.922,  Adjusted R-squared:  0.914
## F-statistic: 114.9 on 7 and 68 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>weight<span style="color:#f92672">*</span>displacement<span style="color:#f92672">*</span>year,data<span style="color:#f92672">=</span>noFactors))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ weight * displacement * year, data = noFactors)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -9.6093 -1.6472 -0.0531  1.2289 14.5604
##
## Coefficients:
##                            Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)              -8.437e+01  3.128e+01  -2.697   0.0073 **
## weight                    8.489e-03  1.322e-02   0.642   0.5212
## displacement              3.434e-01  1.969e-01   1.744   0.0820 .
## year                      1.828e+00  4.127e-01   4.430 1.23e-05 ***
## weight:displacement      -6.589e-05  5.055e-05  -1.303   0.1932
## weight:year              -2.433e-04  1.744e-04  -1.395   0.1638
## displacement:year        -5.566e-03  2.674e-03  -2.082   0.0380 *
## weight:displacement:year  1.144e-06  6.823e-07   1.677   0.0944 .
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 2.951 on 384 degrees of freedom
## Multiple R-squared:  0.8596, Adjusted R-squared:  0.8571
## F-statistic:   336 on 7 and 384 DF,  p-value: &lt; 2.2e-16</code></pre></div>
<ul>
<li>Adding the interaction effects of the \(3\) most positive R value terms
improves the existing prediction to be better than that obtained by
considering all effects.</li>
<li>We note that the best model is obtained by removing the range
identified in chapter 2.</li>
</ul>

<p><strong>(f)</strong> Nonlinear transformations</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span>weight<span style="color:#f92672">*</span>displacement<span style="color:#f92672">*</span>year<span style="color:#f92672">+</span><span style="color:#a6e22e">I</span>(year^2),data<span style="color:#f92672">=</span>noFactors<span style="color:#a6e22e">[</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),]))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ weight * displacement * year + I(year^2),
##     data = noFactors[(10:85), ])
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -5.1815 -0.8235  0.0144  1.0076  3.9420
##
## Coefficients:
##                            Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)              -4.205e+03  1.810e+03  -2.324   0.0232 *
## weight                   -8.800e-02  9.709e-02  -0.906   0.3680
## displacement             -1.030e+00  1.276e+00  -0.807   0.4225
## year                      1.238e+02  5.026e+01   2.464   0.0163 *
## I(year^2)                -9.000e-01  3.506e-01  -2.567   0.0125 *
## weight:displacement       2.471e-04  3.634e-04   0.680   0.4988
## weight:year               1.113e-03  1.365e-03   0.815   0.4177
## displacement:year         1.368e-02  1.800e-02   0.760   0.4501
## weight:displacement:year -3.254e-06  5.111e-06  -0.637   0.5264
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 1.73 on 67 degrees of freedom
## Multiple R-squared:  0.929,  Adjusted R-squared:  0.9205
## F-statistic: 109.6 on 8 and 67 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(mpg<span style="color:#f92672">~</span><span style="color:#a6e22e">.-I</span>(<span style="color:#a6e22e">log</span>(acceleration^2)),data<span style="color:#f92672">=</span>noFactors<span style="color:#a6e22e">[</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),]))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = mpg ~ . - I(log(acceleration^2)), data = noFactors[(10:85),
##     ])
##
## Residuals:
##    Min     1Q Median     3Q    Max
## -6.232 -1.470 -0.211  1.075  7.088
##
## Coefficients:
##                Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)  41.3787633 24.1208720   1.715   0.0907 .
## cylinders     0.0863161  0.6112822   0.141   0.8881
## displacement -0.0148491  0.0103249  -1.438   0.1549
## horsepower   -0.0158500  0.0151259  -1.048   0.2984
## weight       -0.0039125  0.0008546  -4.578 2.02e-05 ***
## acceleration -0.1473786  0.1438220  -1.025   0.3091
## year         -0.0378187  0.3380266  -0.112   0.9112
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 2.262 on 69 degrees of freedom
## Multiple R-squared:  0.8751, Adjusted R-squared:  0.8642
## F-statistic: 80.55 on 6 and 69 DF,  p-value: &lt; 2.2e-16</code></pre></div>
<ul>
<li><p>The best model I found was still the one without the non-linear
transformation but with removed outliers and additional interaction
effects of <code>displacement</code>,=year= and <code>weight</code></p></li>

<li><p>A popular approach is to use a <code>log</code> transform for both the inputs and
the outputs</p></li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(<span style="color:#a6e22e">log</span>(mpg)<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>noFactors<span style="color:#a6e22e">[</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),]))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = log(mpg) ~ ., data = noFactors[(10:85), ])
##
## Residuals:
##       Min        1Q    Median        3Q       Max
## -0.285805 -0.052358 -0.001456  0.066521  0.209739
##
## Coefficients:
##                Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)   3.886e+00  1.028e+00   3.781 0.000328 ***
## cylinders    -1.771e-02  2.604e-02  -0.680 0.498669
## displacement -1.540e-04  4.399e-04  -0.350 0.727314
## horsepower   -2.343e-03  6.444e-04  -3.636 0.000529 ***
## weight       -1.960e-04  3.641e-05  -5.383 9.51e-07 ***
## acceleration -1.525e-02  6.128e-03  -2.489 0.015224 *
## year          4.138e-03  1.440e-02   0.287 0.774703
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 0.09636 on 69 degrees of freedom
## Multiple R-squared:  0.919,  Adjusted R-squared:  0.912
## F-statistic: 130.5 on 6 and 69 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(<span style="color:#a6e22e">log</span>(mpg)<span style="color:#f92672">~</span><span style="color:#a6e22e">log</span>(weight<span style="color:#f92672">*</span>displacement<span style="color:#f92672">*</span>year),data<span style="color:#f92672">=</span>noFactors<span style="color:#a6e22e">[</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">:</span><span style="color:#ae81ff">85</span>),]))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = log(mpg) ~ log(weight * displacement * year), data = noFactors[(10:85),
##     ])
##
## Residuals:
##      Min       1Q   Median       3Q      Max
## -0.41121 -0.04107  0.01266  0.07791  0.21056
##
## Coefficients:
##                                   Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)                        8.91995    0.26467   33.70   &lt;2e-16 ***
## log(weight * displacement * year) -0.34250    0.01508  -22.71   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 0.1158 on 74 degrees of freedom
## Multiple R-squared:  0.8745, Adjusted R-squared:  0.8728
## F-statistic: 515.6 on 1 and 74 DF,  p-value: &lt; 2.2e-16</code></pre></div>
<h3 id="question-3.10---page-123">Question 3.10 - Page 123</h3>

<p>This question should be answered using the Carseats data set.</p>

<p><strong>(a)</strong> Fit a multiple regression model to predict <code>Sales</code> using <code>Price</code>,
<code>Urban</code>, and <code>US</code>.</p>

<p><strong>(b)</strong> Provide an interpretation of each coefficient in the model. Be
careful&mdash;some of the variables in the model are qualitative!</p>

<p><strong>&copy;</strong> Write out the model in equation form, being careful to handle the
qualitative variables properly.</p>

<p><strong>(d)</strong> For which of the predictors can you reject the null hypothesis
\(H_0:\beta_j=0\)?</p>

<p><strong>(e)</strong> On the basis of your response to the previous question, ﬁt a
smaller model that only uses the predictors for which there is evidence
of association with the outcome.</p>

<p><strong>(f)</strong> How well do the models in (a) and (e) fit the data?</p>

<p><strong>(g)</strong> Using the model from (e), obtain \(95%\) confidence intervals for
the coefficient(s).</p>

<p><strong>(h)</strong> Is there evidence of outliers or high leverage observations in the
model from (e)?</p>

<h4 id="answer-3">Answer</h4>

<p>Load the dataset (and clean it)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">cleanCarSeats <span style="color:#f92672">&lt;-</span> <span style="color:#a6e22e">na.omit</span>(ISLR<span style="color:#f92672">::</span>Carseats)</code></pre></div>
<p>Obtain summary statistics</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">cleanCarSeats <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(unique) <span style="color:#f92672">%&gt;%</span> <span style="color:#a6e22e">sapply</span>(length)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##       Sales   CompPrice      Income Advertising  Population       Price
##         336          73          98          28         275         101
##   ShelveLoc         Age   Education       Urban          US
##           3          56           9           2           2</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">str</span>(cleanCarSeats)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## &#39;data.frame&#39;:    400 obs. of  11 variables:
##  $ Sales      : num  9.5 11.22 10.06 7.4 4.15 ...
##  $ CompPrice  : num  138 111 113 117 141 124 115 136 132 132 ...
##  $ Income     : num  73 48 35 100 64 113 105 81 110 113 ...
##  $ Advertising: num  11 16 10 4 3 13 0 15 0 0 ...
##  $ Population : num  276 260 269 466 340 501 45 425 108 131 ...
##  $ Price      : num  120 83 80 97 128 72 108 120 124 124 ...
##  $ ShelveLoc  : Factor w/ 3 levels &#34;Bad&#34;,&#34;Good&#34;,&#34;Medium&#34;: 1 2 3 3 1 1 3 2 3 3 ...
##  $ Age        : num  42 65 59 55 38 78 71 67 76 76 ...
##  $ Education  : num  17 10 12 14 13 16 15 10 10 17 ...
##  $ Urban      : Factor w/ 2 levels &#34;No&#34;,&#34;Yes&#34;: 2 2 2 2 2 1 2 2 1 1 ...
##  $ US         : Factor w/ 2 levels &#34;No&#34;,&#34;Yes&#34;: 2 2 2 2 1 2 1 2 1 2 ...</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(cleanCarSeats)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##      Sales          CompPrice       Income        Advertising
##  Min.   : 0.000   Min.   : 77   Min.   : 21.00   Min.   : 0.000
##  1st Qu.: 5.390   1st Qu.:115   1st Qu.: 42.75   1st Qu.: 0.000
##  Median : 7.490   Median :125   Median : 69.00   Median : 5.000
##  Mean   : 7.496   Mean   :125   Mean   : 68.66   Mean   : 6.635
##  3rd Qu.: 9.320   3rd Qu.:135   3rd Qu.: 91.00   3rd Qu.:12.000
##  Max.   :16.270   Max.   :175   Max.   :120.00   Max.   :29.000
##    Population        Price        ShelveLoc        Age          Education
##  Min.   : 10.0   Min.   : 24.0   Bad   : 96   Min.   :25.00   Min.   :10.0
##  1st Qu.:139.0   1st Qu.:100.0   Good  : 85   1st Qu.:39.75   1st Qu.:12.0
##  Median :272.0   Median :117.0   Medium:219   Median :54.50   Median :14.0
##  Mean   :264.8   Mean   :115.8                Mean   :53.32   Mean   :13.9
##  3rd Qu.:398.5   3rd Qu.:131.0                3rd Qu.:66.00   3rd Qu.:16.0
##  Max.   :509.0   Max.   :191.0                Max.   :80.00   Max.   :18.0
##  Urban       US
##  No :118   No :142
##  Yes:282   Yes:258
##
##
##
##</code></pre></div>
<p>We can see that:</p>

<ul>
<li><strong>Urban</strong>, <strong>US</strong> and <strong>ShelveLoc</strong> are factors with 2,2 and 3 levels
respectively</li>
<li>Education has only 9 unique values so we might as well consider it to
be a factor too if we need to</li>
</ul>

<p><strong>(a)</strong> Multiple Regression Model</p>

<p>Fit it to things</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>cleanCarSeats))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = Sales ~ ., data = cleanCarSeats)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -2.8692 -0.6908  0.0211  0.6636  3.4115
##
## Coefficients:
##                   Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)      5.6606231  0.6034487   9.380  &lt; 2e-16 ***
## CompPrice        0.0928153  0.0041477  22.378  &lt; 2e-16 ***
## Income           0.0158028  0.0018451   8.565 2.58e-16 ***
## Advertising      0.1230951  0.0111237  11.066  &lt; 2e-16 ***
## Population       0.0002079  0.0003705   0.561    0.575
## Price           -0.0953579  0.0026711 -35.700  &lt; 2e-16 ***
## ShelveLocGood    4.8501827  0.1531100  31.678  &lt; 2e-16 ***
## ShelveLocMedium  1.9567148  0.1261056  15.516  &lt; 2e-16 ***
## Age             -0.0460452  0.0031817 -14.472  &lt; 2e-16 ***
## Education       -0.0211018  0.0197205  -1.070    0.285
## UrbanYes         0.1228864  0.1129761   1.088    0.277
## USYes           -0.1840928  0.1498423  -1.229    0.220
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 1.019 on 388 degrees of freedom
## Multiple R-squared:  0.8734, Adjusted R-squared:  0.8698
## F-statistic: 243.4 on 11 and 388 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>US<span style="color:#f92672">*</span>Price<span style="color:#f92672">*</span>Urban,data<span style="color:#f92672">=</span>cleanCarSeats))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = Sales ~ US * Price * Urban, data = cleanCarSeats)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -6.7952 -1.6659 -0.0984  1.6119  7.2433
##
## Coefficients:
##                       Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)          13.456350   1.727210   7.791 6.03e-14 ***
## USYes                 2.049051   2.322591   0.882    0.378
## Price                -0.061657   0.014875  -4.145 4.17e-05 ***
## UrbanYes             -0.651545   2.071401  -0.315    0.753
## USYes:Price          -0.001567   0.019972  -0.078    0.937
## USYes:UrbanYes       -1.122034   2.759662  -0.407    0.685
## Price:UrbanYes        0.010793   0.017796   0.606    0.545
## USYes:Price:UrbanYes  0.001288   0.023619   0.055    0.957
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 2.473 on 392 degrees of freedom
## Multiple R-squared:  0.2467, Adjusted R-squared:  0.2333
## F-statistic: 18.34 on 7 and 392 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>US<span style="color:#f92672">+</span>Price<span style="color:#f92672">+</span>Urban,data<span style="color:#f92672">=</span>cleanCarSeats))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = Sales ~ US + Price + Urban, data = cleanCarSeats)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -6.9206 -1.6220 -0.0564  1.5786  7.0581
##
## Coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept) 13.043469   0.651012  20.036  &lt; 2e-16 ***
## USYes        1.200573   0.259042   4.635 4.86e-06 ***
## Price       -0.054459   0.005242 -10.389  &lt; 2e-16 ***
## UrbanYes    -0.021916   0.271650  -0.081    0.936
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 2.472 on 396 degrees of freedom
## Multiple R-squared:  0.2393, Adjusted R-squared:  0.2335
## F-statistic: 41.52 on 3 and 396 DF,  p-value: &lt; 2.2e-16</code></pre></div>
<p><strong>(b)</strong> Interpret stuff</p>

<p>To interpret the data, we need to determine which of the models fits the
data best, we will use <code>anova()</code> to test this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">lmCarSAll<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>.,data<span style="color:#f92672">=</span>cleanCarSeats)
lmCarStimesPUU<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>US<span style="color:#f92672">*</span>Price<span style="color:#f92672">*</span>Urban,data<span style="color:#f92672">=</span>cleanCarSeats)
lmCarSplusPUU<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>US<span style="color:#f92672">+</span>Price<span style="color:#f92672">+</span>Urban,data<span style="color:#f92672">=</span>cleanCarSeats)
<span style="color:#a6e22e">anova</span>(lmCarSAll,lmCarStimesPUU,lmCarSplusPUU)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## Analysis of Variance Table
##
## Model 1: Sales ~ CompPrice + Income + Advertising + Population + Price +
##     ShelveLoc + Age + Education + Urban + US
## Model 2: Sales ~ US * Price * Urban
## Model 3: Sales ~ US + Price + Urban
##   Res.Df     RSS Df Sum of Sq        F    Pr(&gt;F)
## 1    388  402.83
## 2    392 2397.10 -4  -1994.27 480.2082 &lt; 2.2e-16 ***
## 3    396 2420.83 -4    -23.73   5.7149 0.0001772 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">anova</span>(lmCarStimesPUU,lmCarSplusPUU)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## Analysis of Variance Table
##
## Model 1: Sales ~ US * Price * Urban
## Model 2: Sales ~ US + Price + Urban
##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)
## 1    392 2397.1
## 2    396 2420.8 -4   -23.734 0.9703 0.4236</code></pre></div>
<p><strong>Remember</strong> that it is not possible to use <code>anova()</code> unless the same
variables are present in all the models being tested, so it is
meaningless to use <code>anova</code> for <code>lmCarSAll</code> along with the others,
because we can&rsquo;t change the interaction model to get only the main
effects.</p>

<ul>
<li>We note that due to the low value of the F-statistic and the non-zero
value of the p-value we cannot disregard the null hypothesis, or in
other words, the models are basically the same in terms of their
performance.</li>
</ul>

<p>This means that I would like to continue with the simpler model, since
the increase in R squared is too small to account for dealing with the
additional factors.</p>

<ul>
<li>We see immediately, that there is a positive correlation only with
being in the US</li>
<li>Increases in price and being in an urban area actually decrease the
sales, which is not surprising since being in the an urban area is
probably correlated to a higher price, which we can check immediately</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(<span style="color:#a6e22e">lm</span>(Price<span style="color:#f92672">~</span>Urban,data<span style="color:#f92672">=</span>cleanCarSeats))</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = Price ~ Urban, data = cleanCarSeats)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -92.514 -15.514   1.205  14.595  74.486
##
## Coefficients:
##             Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept)  114.076      2.180  52.330   &lt;2e-16 ***
## UrbanYes       2.438      2.596   0.939    0.348
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 23.68 on 398 degrees of freedom
## Multiple R-squared:  0.002211,   Adjusted R-squared:  -0.0002965
## F-statistic: 0.8817 on 1 and 398 DF,  p-value: 0.3483</code></pre></div>
<p>We see that our assumption is validated. Being in an urban area has a
low t-statistic for a positive increase on the slope</p>

<ul>
<li>Returning to our previous model, we note that there is a high value of
the p-value of the t-statistic for <code>Urban</code> being true, this means
there isn&rsquo;t a real relationship between being in an urban area and the
sales. This makes intuitive sense as well</li>
</ul>

<p><strong>note</strong> <code>t-test</code> is essentially a linear model with one variable, that
is, if we want to find out if there is a relation between having a store
in an urban area, we could sum all the urban yes and divide by the
number of observations and compare that to the sum of all the urban no
divided by the number of observations which is essentially the <code>t-test</code>
again.</p>

<ul>
<li><code>Price</code> is significant, and has an inverse relation with the sales, so
we should keep that in mind</li>
</ul>

<p><strong>&copy;</strong> In Equation Form:</p>

<p>\[ Sales=1.200573*USYes - 0.054459*Price - 0.021916*UrbanYes + 13.043469 \]</p>

<p><strong>(e)</strong> Other models</p>

<ul>
<li>We know from our case-study on testing the full multiple linear
regression for <code>Sales</code> that there are definitely more important
variables being ignored. However, we also know that <code>Urban</code> is not
significant, so we can use a smaller model.</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R">lmCarSplusPU<span style="color:#f92672">&lt;-</span><span style="color:#a6e22e">lm</span>(Sales<span style="color:#f92672">~</span>US<span style="color:#f92672">+</span>Price, data<span style="color:#f92672">=</span>cleanCarSeats)</code></pre></div>
<p><strong>(f)</strong> Comparison of models</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">summary</span>(lmCarSplusPU)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##
## Call:
## lm(formula = Sales ~ US + Price, data = cleanCarSeats)
##
## Residuals:
##     Min      1Q  Median      3Q     Max
## -6.9269 -1.6286 -0.0574  1.5766  7.0515
##
## Coefficients:
##             Estimate Std. Error t value Pr(&gt;|t|)
## (Intercept) 13.03079    0.63098  20.652  &lt; 2e-16 ***
## USYes        1.19964    0.25846   4.641 4.71e-06 ***
## Price       -0.05448    0.00523 -10.416  &lt; 2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
##
## Residual standard error: 2.469 on 397 degrees of freedom
## Multiple R-squared:  0.2393, Adjusted R-squared:  0.2354
## F-statistic: 62.43 on 2 and 397 DF,  p-value: &lt; 2.2e-16</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">anova</span>(lmCarSplusPUU,lmCarSplusPU)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">## Analysis of Variance Table
##
## Model 1: Sales ~ US + Price + Urban
## Model 2: Sales ~ US + Price
##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)
## 1    396 2420.8
## 2    397 2420.9 -1  -0.03979 0.0065 0.9357</code></pre></div>
<p>As expected, the low value of the F statistic and the high p-value for
the <code>anova()</code> test asserts that the null hypothesis cannot be neglected,
thus there are no differences between the model with the insignificant
parameter, which is also seen in the <code>R</code> squared value, which is the
same for both models</p>

<p><strong>(g)</strong> Confidence Intervals</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confint</span>(lmCarSplusPU)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##                   2.5 %      97.5 %
## (Intercept) 11.79032020 14.27126531
## USYes        0.69151957  1.70776632
## Price       -0.06475984 -0.04419543</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">confint</span>(lmCarSplusPUU)</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">##                   2.5 %      97.5 %
## (Intercept) 11.76359670 14.32334118
## USYes        0.69130419  1.70984121
## Price       -0.06476419 -0.04415351
## UrbanYes    -0.55597316  0.51214085</code></pre></div>
<ul>
<li>☐ Look into trying to plot this with <code>ggplot</code></li>
</ul>

<p><strong>(h)</strong> Outliers</p>

<ul>
<li>We will first check the leverage plots</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#a6e22e">par</span>(mfrow<span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>(<span style="color:#ae81ff">2</span>,<span style="color:#ae81ff">2</span>))
<span style="color:#a6e22e">plot</span>(lmCarSplusPU)</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-41-1.png"   />

        
            <figcaption class="center" >Figure 12: Leverage Plots</figcaption>
        
    </figure>



<p>We can see there is a point with high leverage, but it has a low
residual. In any case we should check further.</p>

<ul>
<li>Now we will check the studentized residuals to see if they are greater
than 3</li>
</ul>

<!--listend-->
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-R" data-lang="R"><span style="color:#75715e"># See residuals</span>
<span style="color:#a6e22e">plot</span>(xlab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Prediction&#34;</span>,ylab<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Studentized Residual&#34;</span>,x<span style="color:#f92672">=</span><span style="color:#a6e22e">predict</span>(lmCarSplusPU),y<span style="color:#f92672">=</span><span style="color:#a6e22e">rstudent</span>(lmCarSplusPU))</code></pre></div>

    <figure class="left" >
        <img src="/islr/sol01/unnamed-chunk-42-1.png"   />

        
            <figcaption class="center" >Figure 13: Studentized residuals</figcaption>
        
    </figure>



<p>Thus I would say there are no outliers in our dataset, as none of our
datapoints have an absolute studentized residual above 3.</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:fn-1">James, G., Witten, D., Hastie, T., &amp; Tibshirani, R. (2013). An Introduction to Statistical Learning: with Applications in R. Berlin, Germany: Springer Science &amp; Business Media.
 <a class="footnote-return" href="#fnref:fn-1"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
        </item>
        
    </channel>
</rss>
